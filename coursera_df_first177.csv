,Title,Description,Link
0,Computer Science: Programming with a Purpose,"The basis for education in the last millennium was “reading, writing, and arithmetic;” now it is reading, writing, and computing. Learning to program is an essential part of the education of every student, not just in the sciences and engineering, but in the arts, social sciences, and humanities, as well. Beyond direct applications, it is the first step in understanding the nature of computer science’s undeniable impact on the modern world.  This course covers the first half of our book Computer Science: An Interdisciplinary Approach (the second half is covered in our Coursera course Computer Science: Algorithms, Theory, and Machines). Our intent is to teach programming to those who need or want to learn it, in a scientific context.  We begin by introducing basic programming elements such as variables, conditionals, loops, arrays, and I/O. Next, we turn to functions, introducing key concepts such as recursion, modular programming, and code reuse. Then, we present a modern introduction to object-oriented programming.

We use the Java programming language and teach basic skills for computational problem solving that are applicable in many modern computing environments. Proficiency in Java is a goal, but we focus on fundamental concepts in programming, not Java per se.

All the features of this course are available for free. People who are interested in digging deeper into the content may wish to obtain the textbook Computer Science: An Interdisciplinary Approach  (upon which the course is based) or to visit the website introcs.cs.princeton.edu for a wealth of additional material.

This course does not offer a certificate upon completion.",https://www.coursera.org/learn/cs-programming-java
1,"Computer Science:  Algorithms, Theory, and Machines","This course  introduces the broader discipline of computer science to people having basic familiarity with Java programming.  It covers the second half of our book Computer Science: An Interdisciplinary Approach (the first half is covered in our Coursera course Computer Science: Programming with a Purpose, to be released in the fall of 2018). Our intent is to demystify computation and to build awareness about the substantial intellectual underpinnings and rich history of the field of computer science. First, we introduce classic algorithms along with scientific techniques for evaluating performance, in the context of modern applications. Next, we introduce classic theoretical models that allow us to address fundamental questions about computation, such as computability, universality, and intractability. We conclude with machine architecture (including machine-language programming and its relationship to coding in Java) and logic design (including a full CPU design built from the ground up).

The course emphasizes the relationships between applications programming, the theory of computation, real computers, and the field's history and evolution, including the nature of the contributions of Boole, Shannon, Turing, von Neumann, and others.

All the features of this course are available for free. People who are interested in digging deeper into the content may wish to obtain the textbook Computer Science: An Interdisciplinary Approach  (upon which the course is based) or to visit the website introcs.cs.princeton.edu for a wealth of additional material.

This course does not offer a certificate upon completion.",https://www.coursera.org/learn/cs-algorithms-theory-machines
2,"HTML, CSS, and Javascript for Web Developers","Do you realize that the only functionality of a web application that the user directly interacts with is through the web page? Implement it poorly and, to the user, the server-side becomes irrelevant! Today’s user expects a lot out of the web page: it has to load fast, expose the desired service, and be comfortable to view on all devices: from a desktop computers to tablets and mobile phones. In this course, we will learn the basic tools that every web page coder needs to know. We will start from the ground up by learning how to implement modern web pages with HTML and CSS. We will then advance to learning how to code our pages such that its components rearrange and resize themselves automatically based on the size of the user’s screen. You’ll be able to code up a web page that will be just as useful on a mobile phone as on a desktop computer. No “pinch and zoom” required! Last but certainly not least, we will get a thorough introduction to the most ubiquitous, popular, and incredibly powerful language of the web: Javascript. Using Javascript, you will be able to build a fully functional web application that utilizes Ajax to expose server-side functionality and data to the end user.",https://www.coursera.org/learn/html-css-javascript-for-web-developers
3,Learn to Program: The Fundamentals,"Behind every mouse click and touch-screen tap, there is a computer program that makes things happen. This course introduces the fundamental building blocks of programming and teaches you how to write fun and useful programs using the Python language.",https://www.coursera.org/learn/learn-to-program
4,Introduction to Software Engineering,"Are you curious about the lucrative field that is software engineering and how you might be a part of it? This is the course for you! By taking this course you will gain foundational knowledge of software development, programming, and the many exciting job roles and career paths that the IT industry offers.  Learn about the power of the Software Development Lifecycle (SDLC), and modern software development frameworks methodologies like Agile and Scrum. Explore fundamental programming principles and foundations of design, architecture, and deployment. The course offers a number of labs that will help you get important hands-on experience. These include, getting started with an IDE, basics of programming in Python, and Hello World in 10 languages.  

The field of software engineering is growing at an estimated rate of 22% according to the US Bureau of Labor and Statistics. In addition to aspiring software engineers, front-end, back-end, full stack developers and DevOps professionals, this course is also suitable for those in related careers such as Product and Project Managers, IT Managers, Information Developers, UI/UX designers and others who communicate and interact with software engineers.   

You will learn about the different job opportunities and possible career paths in the software engineering field and also hear from industry professionals about what they do on a day-to-day basis.  

Professionals in the software engineering field are in great demand and now is a great time to learn more about this exciting domain. Start by enrolling now!",https://www.coursera.org/learn/introduction-to-software-engineering
5,Introduction to TCP/IP,"You use the Internet through your PC (Personal Computer), laptop, tablet, smartpad, and smartphone every day in everything you do. Through your own PC/laptop, you can easily learn everything about the Internet, and that is what this course is focused on. In this course ‘Introduction to TCP/IP,’ you will learn the operational functions of Internet technologies (which include IPv4, IPv6, TCP, UDP, addressing, routing, domain names, etc.) and your PC/laptop's security and gateway Internet setup and basic principles. In addition, through a simple Wireshark experiment, you will see the TCP/IP packets and security systems in action that are serving your PC/laptop, that serves you.",https://www.coursera.org/learn/tcpip
6,Foundations of Cybersecurity,"This is the first course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to prepare for an entry-level cybersecurity job.  In this course, you will be introduced to the world of cybersecurity through an interactive curriculum developed by Google. You will identify significant events that led to the development of the cybersecurity field, explain the importance of cybersecurity in today's business operations, and explore the job responsibilities and skills of an entry-level cybersecurity analyst. 

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete the eight courses in the Google Cybersecurity Certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Identify how security attacks impact business operations.
- Explore the job responsibilities and core skills of an entry-level cybersecurity analyst.
- Recognize how past and present attacks on organizations led to the development of the cybersecurity field.
- Learn the CISSP eight security domains.
- Identify security domains, frameworks, and controls.
- Explain security ethics.
- Recognize common tools used by cybersecurity analysts.",https://www.coursera.org/learn/foundations-of-cybersecurity
7,Code Yourself! An Introduction to Programming,"Have you ever wished you knew how to program, but had no idea where to start from? This course will teach you how to program in Scratch, an easy to use visual programming language. More importantly, it will introduce you to the fundamental principles of computing and it will help you think like a software engineer.",https://www.coursera.org/learn/intro-programming
8,Computational Thinking for Problem Solving,"Computational thinking is the process of approaching a problem in a systematic manner and creating and expressing a solution such that it can be carried out by a computer.  But you don't need to be a computer scientist to think like a computer scientist!  In fact, we encourage students from any field of study to take this course.  Many quantitative and data-centric problems can be solved using computational thinking and an understanding of computational thinking will give you a foundation for solving problems that have real-world, social impact.    In this course, you will learn about the pillars of computational thinking, how computer scientists develop and analyze algorithms, and how solutions can be realized on a computer using the Python programming language.  By the end of the course, you will be able to develop an algorithm and express it to the computer by writing a simple Python program. 

This course will introduce you to people from diverse professions who use computational thinking to solve problems. You will engage with a unique community of analytical thinkers and be encouraged to consider how you can make a positive social impact through computational thinking.",https://www.coursera.org/learn/computational-thinking-problem-solving
9,Cybersecurity for Everyone,"Cybersecurity affects everyone, including in the delivery of basic products and services. If you or your organization want to better understand how to address your cybersecurity, this is the course for you and your colleagues to take -- from seasoned professionals to your non-technical colleagues. Your instructor, Dr. Charles Harry, has served on the front lines with the NSA (National Security Agency) and as an expert advising corporate and institutional leaders on managing cybersecurity risk. And he brings a rare and engaging perspective to help you learn cybersecurity from the ground up.

Cybersecurity for Everyone lays the groundwork to understand and explore the key issues facing policy makers attempting to manage the problem of cybersecurity, from its technical foundations to the domestic and international policy considerations surrounding governance, privacy, and risk management, to applications for achieving the goals of an enterprise, an institution, or a nation. This course is designed for students with some or no background in information technology, whether a novice or active in the cybersecurity field (engineers and computer scientists will learn the broader context and business aspects of cybersecurity), and will provide the principles to understand the current debates shaping a rapidly evolving security landscape.",https://www.coursera.org/learn/cybersecurity-for-everyone
10,Foundations of Computer Science,"Welcome to Introduction to Programming: Visual Basic.  In the course sequence you will learn to write programs that utilize both procedural and object oriented techniques to solve business problems.   In the first course in the sequence we will provide you with a solid foundation in the computer science topics that are important to understand when programming Visual Basic. In courses two through four, we will role up our sleeves and start coding in Visual Basic. In these courses you need to have access to a computer that is running Windows, macOS or Linux with the .NET 5 installed.  We will show you how to install .NET 5.",https://www.coursera.org/learn/computer-science-foundations
11,How Computers Work,"Computers are everywhere, they aren't just the desktops and laptops we use for work but the phones in our pockets and even the watches on our wrists are also computers. You probably use a computer every day and in fact you are reading this on a computer!  Just because we use computers all the time, doesn't mean that we understand them, or find them easy to use. Computer Science is the science of computers, it is the field of knowledge that experts use to understand computer systems. Knowing a little computer science will help you understand the computers all around you. 

This isn't a how-to course for a particular piece of software, instead you will learn some fundamental concepts that you can apply to any software or computer system. You'll apply these concepts to the kind of computer systems we use every day, including word processing applications, e-commerce, the internet and web sites. You will learn how to apply computer science concepts to solve problems in daily computer use and generally be a better computer user. 

Taking this course could be the start of your career in computer science, and the course is an introduction to the Bachelors in Computer Science from University of London, but it is also for you if you just want to learn a little computer science to help you better understand the computers you use in your ordinary life.",https://www.coursera.org/learn/how-computers-work
12,"Programming Languages, Part A","This course is an introduction to the basic concepts of programming languages, with a strong emphasis on functional programming. The course uses the languages ML, Racket, and Ruby as vehicles for teaching the concepts, but the real intent is to teach enough about how any language “fits together” to make you more effective programming in any language -- and in learning new ones. This course is neither particularly theoretical nor just about programming specifics -- it will give you a framework for understanding how to use language constructs effectively and how to design correct and elegant programs. By using different languages, you will learn to think more deeply than in terms of the particular syntax of one language. The emphasis on functional programming is essential for learning how to write robust, reusable, composable, and elegant programs. Indeed, many of the most important ideas in modern languages have their roots in functional programming. Get ready to learn a fresh and beautiful way to look at software and how to have fun building it.

The course assumes some prior experience with programming, as described in more detail in the first module.

The course is divided into three Coursera courses: Part A, Part B, and Part C.  As explained in more detail in the first module of Part A, the overall course is a substantial amount of challenging material, so the three-part format provides two intermediate milestones and opportunities for a pause before continuing.  The three parts are designed to be completed in order and set up to motivate you to continue through to the end of Part C.  The three parts are not quite equal in length: Part A is almost as substantial as Part B and Part C combined.

Week 1 of Part A has a more detailed list of topics for all three parts of the course, but it is expected that most course participants will not (yet!) know what all these topics mean.",https://www.coursera.org/learn/programming-languages
13,Interactive Computer Graphics,"Computer graphics can be a powerful tool for supporting visual problem solving, and interactivity plays a central role in harnessing the users' creativity. This course will introduce various interactive tools developed in computer graphics research field with their design rationales and algorithms. Examples include enhancements to graphical user interfaces, authoring tools for 2D drawings and 3D animations, and interactive computer-aided design systems. Rich live demonstrations and course assignments will give you insights and skills to design and implement such tools for your own problems.",https://www.coursera.org/learn/interactive-computer-graphics
14,Information Technology (IT) Fundamentals for Everyone,"This course will guide you through fundamental concepts and skills to confidently navigate various aspects of IT and the digital world. You will be introduced to the vast field of IT, covering a wide range of topics to build your IT knowledge. You will delve into hardware, operating systems technology, software, programming, databases, networking, storage, cybersecurity, cloud computing, and support and operations. Designed to summarize the IT Fundamentals and Cloud specialization courses, this course is ideal for individuals seeking non-IT practitioner roles, such as project managers. It provides essential insights into the IT field, equipping you to collaborate effectively with IT teams and make informed decisions within your role. Each lesson contains materials such as hands-on labs and interactive activities to practice your newfound skills, glossaries to help you learn new vocabulary, as well as practice and graded quizzes to assess what you’ve learned.

If you seek a non-technical role in the IT industry, this course provides you with a strong foundation so you can thrive in the ever-evolving IT landscape.",https://www.coursera.org/learn/information-technology-it-fundamentals-for-everyone
15,Programming Fundamentals,"Programming is an increasingly important skill, whether you aspire to a career in software development, or in other fields. This course is the first in the specialization Introduction to Programming in C, but its lessons extend to any language you might want to learn. This is because programming is fundamentally about figuring out how to solve a class of problems and writing the algorithm, a clear set of steps to solve any problem in its class. This course will introduce you to a powerful problem-solving process—the Seven Steps—which you can use to solve any programming problem. In this course, you will learn how to develop an algorithm, then progress to reading code and understanding how programming concepts relate to algorithms.",https://www.coursera.org/learn/programming-fundamentals
16,Computer Hardware and Software,"This course provides foundational understanding of how computers process information through hardware and software. You will investigate the world of Information Technology (IT) and survey hardware components, mobile devices, operating systems, programs and apps, network fundamentals, the Internet, and touch on security and ethics.",https://www.coursera.org/learn/computer-hardware-software
17,An Introduction to Logic for Computer Science,"Logic plays a fundamental role in computer science. This course is designed to equip you with a solid understanding of the fundamental principles of logic and their relevance in the field of computer science.  In this course, you'll explore proposition logic and discover its practical applications in problem-solving, algorithm design, and the development of intelligent systems. By engaging in hands-on exercises, exploring real-world examples, and participating in discussions, you'll develop strong logical reasoning and critical thinking skills. 

Join this course to build a solid foundation in logic, enhance your problem-solving abilities, and unlock new opportunities in the world of computer science.

This course is one of many, offered by Click Start, a UK training programme designed to help young people develop digital skills. Click Start offers a limited number of scholarships giving free access to young people in the UK. Check the FAQs to see more detail and follow the link to check if you are eligible for free access today.",https://www.coursera.org/learn/an-introduction-to-logic-in-computer-science
18,Python Programming Fundamentals,"This introductory course is designed for beginners and individuals with limited programming experience who want to embark on their software development or data science journey using Python. Throughout the course, learners will gain a solid understanding of algorithmic thinking, Python syntax, code testing, debugging techniques, and modular code development--essential skills for a successful career in software engineering, development, or data science.  By the end of this course, you will learn to:

- Gain a stepwise approach to problem-solving using algorithms and programming logic.
- Apply common functions, conditional statements, and loops to build Python scripts and programs.
- Work with the VS Code programming environment to enhance coding proficiency.
- Use testing and debugging strategies to ensure code reliability.
- Perform logical and mathematical operations on datasets.

In the final week of the course you will apply your new algorithm design and programming skills to a data analysis problem: analyzing heart rate data.",https://www.coursera.org/learn/python-programming-fundamentals
19,Mathematical Thinking in Computer Science,"Mathematical thinking is crucial in all areas of computer science: algorithms, bioinformatics, computer graphics, data science, machine learning, etc. In this course, we will learn the most important tools used in discrete mathematics: induction, recursion, logic, invariants, examples, optimality. We will use these tools to answer typical programming questions like: How can we be certain a solution exists? Am I sure my program computes the optimal answer? Do each of these objects meet the given requirements? In the online course, we use a try-this-before-we-explain-everything approach: you will be solving many interactive (and mobile friendly) puzzles that were carefully designed to allow you to invent many of the important ideas and concepts yourself.

Prerequisites: 
1. We assume only basic math (e.g., we expect you to know what is a square or how to add fractions), common sense and curiosity. 
2. Basic programming knowledge is necessary as some quizzes require programming in Python.",https://www.coursera.org/learn/what-is-a-proof
20,Introduction to Python Programming,"This course provides an introduction to programming and the Python language.  Students are introduced to core programming concepts like data structures, conditionals, loops, variables, and functions.  This course includes an overview of the various tools available for writing and running Python, and gets students coding quickly.  It also provides hands-on coding exercises using commonly used data structures, writing custom functions, and reading and writing to files. This course may be more robust than some other introductory python courses, as it delves deeper into certain essential programming topics.",https://www.coursera.org/learn/python-programming-intro
21,Cryptography I,"Cryptography is an indispensable tool for protecting information in computer systems. In this course you will learn the inner workings of cryptographic systems and how to correctly use them in real-world applications. The course begins with a detailed discussion of how two parties who have a shared secret key can communicate securely when a powerful adversary eavesdrops and tampers with traffic. We will examine many deployed protocols and analyze mistakes in existing systems. The second half of the course discusses public-key techniques that let two parties generate a shared secret key. Throughout the course participants will be exposed to many exciting open problems in the field and work on fun (optional) programming projects. In a second course (Crypto II) we will cover more advanced cryptographic tasks such as zero-knowledge, privacy mechanisms, and other forms of encryption.",https://www.coursera.org/learn/crypto
22,Introduction to Agile Development and Scrum,"Get started with using Agile Development and Scrum with this self-paced introductory course! After successfully completing this course, you will be able to embrace the Agile concepts of adaptive planning, iterative development, and continuous improvement - resulting in early deliveries and value to customers.  You will look at Scrum as a framework and learn how to apply it alongside Agile. You will also become familiar with related methodologies like Waterfall, Extreme Programming (XP), and Kanban. 

Apply Agile practices derived from lean manufacturing concepts, like test-driven development. Learn how a scrum team functions. Also learn about the importance of Agile iterative planning and enable yourself to write good user stories and track your team’s progress using a kanban board.  

Create and refine a product backlog collaboratively with the team and the customer, in a flexible and blameless culture. You'll also learn how to use burndown charts, achieve sprint goals, and conduct the sprint review and retrospective. This approach will lead you to higher levels of efficiency, with the ability to plan and execute sprints with your development team, measuring success with actionable metrics.  

This course is about more than facts and processes. It is about working collaboratively on a self-organizing team, coached by a scrum master, and building what is needed, rather than simply following a plan. Developed and taught by an experienced Agile practitioner, the course includes hands-on practice through realistic scenario-based labs using GitHub and ZenHub. 

The course will benefit anyone who wants to get started with working the Agile way or transform the organizational culture to adopt and realize the benefits of Scrum. This includes Project Managers, Product Managers, and Executives. It is particularly suitable for IT practitioners such as software developers, development managers, and IT Scrum Masters.",https://www.coursera.org/learn/agile-development-and-scrum
23,Programming for Everybody (Getting Started with Python),"This course aims to teach everyone the basics of programming computers using Python. We cover the basics of how one constructs a program from a series of simple instructions in Python.  The course has no pre-requisites and avoids all but the simplest mathematics. Anyone with moderate computer experience should be able to master the materials in this course. This course will cover Chapters 1-5 of the textbook “Python for Everybody”.  Once a student completes this course, they will be ready to take more advanced programming courses. This course covers Python 3.",https://www.coursera.org/learn/python
24,"Problem Solving, Python Programming, and Video Games","This course is an introduction to computer science and programming in Python.  Upon successful completion of this course, you will be able to: 1.  Take a new computational problem and solve it, using several problem solving techniques including abstraction and problem decomposition.
2.  Follow a design creation process that includes: descriptions, test plans, and algorithms.
3.  Code, test, and debug a program in Python, based on your design.

Important computer science concepts such as problem solving (computational thinking), problem decomposition, algorithms, abstraction, and software quality are emphasized throughout.

This course uses problem-based learning. The Python programming language and video games are used to demonstrate computer science concepts in a concrete and fun manner. The instructional videos present Python using a conceptual framework that can be used to understand any programming language. This framework is based on several general programming language concepts that you will learn during the course including: lexics, syntax, and semantics.

Other approaches to programming may be quicker, but are more focused on a single programming language, or on a few of the simplest aspects of programming languages. The approach used in this course may take more time, but you will gain a deeper understanding of programming languages. After completing the course,  in addition to learning Python programming, you will be able to apply the knowledge and skills you acquired to: non-game problems, other programming languages, and other computer science courses.

You do not need any previous programming, Python, or video game experience.  However, several basic skills are needed: computer use (e.g., mouse, keyboard, document editing), elementary mathematics, attention to detail (as with many technical subjects), and a “just give it a try” spirit will be keys to your success.  Despite the use of video games for the main programming project, PVG is not about computer games.  For each new programming concept, PVG uses non-game examples to provide a basic understanding of computational principles, before applying these programming concepts to video games.

The interactive learning objects (ILO) of the course provide automatic, context-specific guidance and feedback, like a virtual teaching assistant, as you develop problem descriptions, functional test plans, and algorithms.  The course forums are supported by knowledgeable University of Alberta personnel, to help you succeed.

All videos, assessments, and ILOs are available free of charge.  There is an optional Coursera certificate available for a fee.",https://www.coursera.org/learn/problem-solving-programming-video-games
25,Introduction to Java,"This Course is the first of a series of courses that make up the Core Java Specialization.  The Core Java Specialization, in turn, is part of a series of programming specializations, derived from LearnQuest's private Java Bootcamps, designed to provide the skill set necessary to be hired as an IT developer using Java in many corporate environments. This course includes hands-on practice and will give you a solid knowledge of the Java language. After completing this course, you will be able to identify Java’s benefits, program in basic Java syntax using Java data types, and incorporate branches and loops.

The audience for this course:
-    Anyone interested in learning Java
-    Programmers
-    Technical Managers
-    Application Developers

Prerequisites: To be successful with this course, you should understand the fundamentals of software development in either a procedural or object-oriented language.",https://www.coursera.org/learn/java-introduction
26,Basic Mathematics,"Welcome to Basic Mathematics course! This course provides elementary introduction to basic mathematics concepts and their applications. In this course, you will be introduced to Complex Numbers, Quadratic Equations, Trigonometry, Matrices, Differential Calculus, Integral Calculus and Ordinary Differential Equations along with the applications of each concept. After completing this course, you will be able to use basic mathematics concepts effectively and also will be able to apply the concepts in real-world problems.",https://www.coursera.org/learn/basicmathematics
27,"Dynamic Programming, Greedy Algorithms","This course covers basic algorithm design techniques such as divide and conquer, dynamic programming, and greedy algorithms. It concludes with a brief introduction to intractability (NP-completeness) and using linear/integer programming solvers for solving optimization problems. We will also cover some advanced topics in data structures. This course can be taken for academic credit as part of CU Boulder’s MS in Data Science or MS in Computer Science degrees offered on the Coursera platform. These fully accredited graduate degrees offer targeted courses, short 8-week sessions, and pay-as-you-go tuition. Admission is based on performance in three preliminary courses, not academic history. CU degrees on Coursera are ideal for recent graduates or working professionals. Learn more: 

MS in Data Science: https://www.coursera.org/degrees/master-of-science-data-science-boulder 

MS in Computer Science: https://coursera.org/degrees/ms-computer-science-boulder",https://www.coursera.org/learn/dynamic-programming-greedy-algorithms
28,Introduction to Back-End Development,"Welcome to Introduction to Back-End Development, the first course in the Meta Back-End Developer program.   This course is a good place to start if you want to become a web developer. You will learn about the day-to-day responsibilities of a web developer and get a general understanding of the core and underlying technologies that power the internet. You will learn how front-end developers create websites and applications that work well and are easy to maintain. 

You’ll be introduced to the core web development technologies like HTML and CSS and get opportunities to practice using them. You will also be introduced to modern UI frameworks such as Bootstrap and React that make it easy to create interactive user experiences. 

By the end of the course, you will be able to: 
- Describe the front-end developer role 
- Explain the core and underlying technologies that power the internet 
- Use HTML to create a simple webpage 
- Use CSS to control the appearance of a simple webpage 
- Explain what React is 
- Describe the applications and characteristics of the most popular UI frameworks 

For the final project in this course, you will create and edit a webpage using HTML and the Bootstrap CSS framework. Using a responsive layout grid, you will construct a responsive webpage containing text and images that looks great on any size screen. 

This is a beginner course intended for learners eager to learn the fundamentals of web development. To succeed in this course, you do not need prior web development experience, only basic internet navigation skills and an eagerness to get started with coding.",https://www.coursera.org/learn/introduction-to-back-end-development
29,Introduction to User Experience Design ,"The focus of this course is to introduce the learner to User Experience (UX) Design User Experience design is design that is user centered. The goal is to design artifacts that allow the users to meet their needs in the most effective efficient and satisfying manner. The course introduces the novice to a cycle of discovery and evaluation and a set of techniques that meet the user's needs.

This course is geared toward the novice. It is for learners that have heard about ""user experience"" or ""user interface"" design but don't really know much about these disciplines.

The course mantra is that “Design is a systematic and data driven process.” Design is systematic because it is based on a set of techniques and also on a cycle of discovery.

In this course the learner is introduced to the four step user interface design cycle. Along the way learners are exposed to a set of techniques to gather information about a) what the user needs b)how to design and model interfaces based on these and then how to evaluate the design to ascertain that the user's goals are met. These techniques are tools that are used in a standardized manner and give us the data we use in our design.

This means that anyone (regardless of their current training) that is willing to learn these techniques and follow the proposed cycle can be a UX designer!",https://www.coursera.org/learn/user-experience-design
30,APIs,"Delve deeper into the processes and concepts behind APIs and their infrastructure. Explore the key concepts that underpin API development and the principles of representational state transfer architectural style (REST) architecture. Build basic API and REST data backbones for web apps using Django. Discover emerging API technology and practice other ways to build and work with APIs. Finally, you will test, optimize and develop documentation for an API. By the end of this course you will be able to:

• Work with and build APIs
• Build basic API and REST data backbones for web apps using Django
• Discover emerging API technology 
• Test, optimize and develop documentation for an API

To complete this course, you will need Django experience.  Additionally, it always helps to have a can-do attitude!",https://www.coursera.org/learn/apis
31,An Introduction to Programming using Python,"Maximise your employability, by learning the basics of coding in Python. Python is a versatile programming language used for developing websites and software, task automation, data analysis and more.  In this course, you'll embark on an exciting journey into the world of Python and gain valuable skills that will enable you to start thinking about a career in programming.

Through exercises and practical projects, you will gain confidence and deepen your understanding of coding in Python. By the end of the course, you will be able to showcase your skills by programming a small robot to navigate obstacles. 

Join us on this transformative journey and unlock the boundless potential of Python programming to discover the opportunities awaiting you in the world of development.

This course is offered by Click Start, a nationwide training programme designed to help young people develop digital skills. Click Start offers a limited number of scholarships giving free access to young people in the UK. Follow the link in the Click Start bio to check if you are eligible for free access!",https://www.coursera.org/learn/an-introduction-to-programming-using-python
32,"Introduction to Web Development with HTML, CSS, JavaScript","Want to take the first steps to become a Web Developer? This course will help you discover the languages, frameworks, and tools that you will need to create interactive and engaging websites right from the beginning.   You will begin by learning about the roles of front-end, back-end, and full-stack developers and how they work together on development projects. Through this, you will also become familiar with the terminology and skills needed in your career as a web developer.  

Next, you will explore the languages needed for developing websites or applications. You will gain a thorough understanding of HTML and CSS and learn how a combination of both technologies can help developers create the structure and style of their websites.  

Finally, you will learn how JavaScript can make your webpages dynamic with features that include interactive forms, dynamic content modification, and sophisticated menu systems. 

By learning the fundamentals of HTML5, CSS, and JavaScript you will be able to combine them to:  
- create the basic structure of a website  
- create format and layout for web applications 
- enhance your website and create rich, interactive applications 
- increase user interactivity and enhance user experience 
- give your website a real wow factor! 

In this course you will practice what you learn with numerous hands-on labs. Lastly, you will complete a final project where you will create a webpage to showcase your skills and have a great addition to your portfolio!",https://www.coursera.org/learn/introduction-to-web-development-with-html-css-javacript
33,C++ Basics: Selection and Iteration,"Code and run your first C++ program in minutes without installing anything! This course is designed for learners with no coding experience, providing a solid foundation of not just C++, but core Computer Science topics that can be transferred to other languages. The modules in this course cover printing, operators, iteration (i.e., loops), and selection (i.e., conditionals).

To allow for a truly hands-on, self-paced learning experience, this course is video-free. Assignments contain short explanations with images and runnable code examples with suggested edits to explore code examples further, building a deeper understanding by doing. You'll benefit from instant feedback from a variety of assessment items along the way, gently progressing from quick understanding checks (multiple choice, fill in the blank, and un-scrambling code blocks) to small, approachable coding exercises that take minutes instead of hours.",https://www.coursera.org/learn/codio-cpp-basics
34,Introduction to Programming,"Designed for the not-yet-experienced programmer, this course will provide you with a structured foundation for developing complex programs in the fields of computer science or data science. If you are a self-taught programmer with scattered bits of understanding, or a complete novice, this is the course for you. Here, you will gain a thorough understanding of how to write programs to solve problems, through structured, scaffolded, hands-on exercises with many examples and opportunities to practice. You will learn the foundational concepts of computer science by developing programs in the python programming language (one of the most commonly used languages).  

We will also use many of the most common python packages -- why reinvent the wheel when you can use well-tested, flexible, pre-built solutions? While these packages can save significant time, it is also important to understand how they do their magic, and if your particular problem is the right fit to be solved by these potential tools.  You will encounter the following python packages: numpy, scipy, matplotlib, pandas, seaborn, re (for regular expressions), textblob, nltk, and others.

In the process of learning how to program, we will explore different topics at the introductory level, including natural language processing and data analytics.

By the end of this course, you will be confident in your ability to solve a problem using the python programming language -- and how to verify that your solution is accurate.",https://www.coursera.org/learn/ball-state-university-introduction-to-programming-open-content
35,Software Defined Networking,"In this course, you will learn about software defined networking and how it is changing the way communications networks are managed, maintained, and secured.",https://www.coursera.org/learn/sdn
36,C for Everyone: Structured Programming,"In the new world we live in, coding is a universally valuable skill, whether you're a scientist, artist, or a humanist. Algorithms are everywhere, and we all have to understand how they work. The C language is particularly well suited as an introduction to coding: It's a tried-and-true language, and it allows you to understand computing processes at a deep level. You will also get an introduction to more advanced programming in C++ in the final module.  This is a continuation of C for Everyone: Fundamentals, which you should take before beginning this course. 
The time estimated time commitment for this course is five hours a week for five weeks.",https://www.coursera.org/learn/c-structured-programming
37,Calculus for Machine Learning and Data Science,"After completing this course, learners will be able to: •  Analytically optimize different types of functions commonly used in machine learning using properties of derivatives and gradients 
•  Approximately optimize different types of functions commonly used in machine learning using first-order (gradient descent) and second-order (Newton’s method) iterative methods
• Visually interpret differentiation of different types of functions commonly used in machine learning
• Perform gradient descent in neural networks with different activation and cost functions 

Mathematics for Machine Learning and Data science is a foundational online program created by DeepLearning.AI and taught by Luis Serrano. This beginner-friendly program is where you’ll master the fundamental mathematics toolkit of machine learning.

Many machine learning engineers and data scientists need help with mathematics, and even experienced practitioners can feel held back by a lack of math skills. This Specialization uses innovative pedagogy in mathematics to help you learn quickly and intuitively, with courses that use easy-to-follow plugins and visualizations to help you see how the math behind machine learning actually works. 

Upon completion, you’ll understand the mathematics behind all the most common algorithms and data analysis techniques — plus the know-how to incorporate them into your machine learning career.

This is a beginner-friendly program, with a recommended background of at least high school mathematics (functions, basic algebra). We also recommend a basic familiarity with Python (loops, functions, if/else statements, lists/dictionaries, importing libraries) , as labs use Python and Jupyter Notebooks to demonstrate learning objectives in the environment where they’re most applicable to machine learning and data science.",https://www.coursera.org/learn/machine-learning-calculus
38,Sound the Alarm: Detection and Response,"This is the sixth course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to apply for an entry-level cybersecurity job. You’ll build on your understanding of the topics that were introduced in the fifth Google Cybersecurity Certificate course. In this course, you will focus on incident detection and response. You'll define a security incident and explain the incident response lifecycle, including the roles and responsibilities of incident response teams. You'll analyze and interpret network communications to detect security incidents using packet sniffing tools to capture network traffic. By assessing and analyzing artifacts, you'll explore the incident investigation and response processes and procedures. Additionally, you'll practice using Intrusion Detection Systems (IDS) and Security Information Event Management (SIEM) tools.

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete this certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Explain the lifecycle of an incident.
- Describe the tools used in documentation, detection, and management of incidents.
- Analyze packets to interpret network communications.
- Perform artifact investigations to analyze and verify security incidents.
- Identify the steps to contain, eradicate, and recover from an incident.
- Determine how to read and analyze logs during incident investigation.
- Interpret the basic syntax and components of signatures and logs in Intrusion Detection Systems (IDS) and Network Intrusion Detection Systems (NIDS) tools.
- Perform queries in Security Information and Event Management (SIEM) tools to investigate an event.",https://www.coursera.org/learn/detection-and-response
39,Google Workspace Mail Management,"""Google Workspace Mail Management is the fourth course in the Google Workspace Administration series. In this course you will learn how to protect your organization against spam, spoofing, phishing and malware attacks. You will configure email compliance and learn how to implement data loss prevention (DLP) for your organization. You will gain an understanding of the mail routing options available and learn how to allowlist and block senders. You will also become familiar with other mail options such as inbound and outbound gateways, 3rd party email archiving, and journaling to Vault.""",https://www.coursera.org/learn/google-workspace-mail-management
40,Introduction to Computer Programming ,"This MOOC provides you with the foundational skill set required to write computer programs. If you are interested in learning how to write interactive, graphical programs from an introductory level in a real programming language, this is the course for you. You will begin by learning the basics of editing and running programs. Then you will learn how to create 2D graphics using shapes and coordinates. Finally, you will learn how to create interactive graphics that you can control with the mouse. You will even solve a set of interactive puzzles using your coding skills in the Sleuth game which has been created especially for this course. The course uses the Javascript language and the p5.js library.",https://www.coursera.org/learn/introduction-to-computer-programming
41,International Cyber Conflicts,"By nature, cyber conflicts are an international issue that span across nation-state borders. By the end of the course, you will be able to apply the knowledge gained for analysis and management of international cyber incidents and conflicts including for activities such as development of policy related to cybercrime and cyberwarfare. Management of cyber incidents and conflicts requires an interdisciplinary perspective including an understanding of: 1) characteristics of the cyber threats and conflicts themselves, 2) international efforts to reduce and improve cyber security, and 3) psychological and sociopolitical factors.  The course is designed to reach an international audience and will encourage discussion on relevant current events among participants to enrich the experience with various personal and cultural perspectives on cutting-edge issues. In addition, assignments and other assessments will supplement video lectures and selected readings to ensure application of the material.


After taking this course you will be able to:

• Identify different types of actors involved in cyber threats (individuals, organizations & nation-states)
• Distinguish between different types of threats and issues in cyber security including, data theft, political espionage, critical infrastructure protection, and propaganda
• Detail the basic characteristics of the Internet infrastructure and international efforts to address Internet governance
• List several international efforts to address cyber crime and espionage
• Evaluate how principals that govern international conflicts might be applied in context of cyber security
• Apply different psychological theories of human motivation and cooperation and communication and political theories in analysis of different international issues related to cyber security including censorship, media operations and role of social technologies.


Grading:

Your grade is assessed based on discussion posts and quizzes. Individual taking this course for credit (i.e. students at the University at Albany y will be required to engage in additional activities communicated to them directly). 


Recommended Background:

No background knowledge or skills are necessary, but an understanding and familiarity of cyber security, Internet infrastructure and international law would be advantageous for anyone who participates in the course.


ACKNOWLEDGEMENTS

Ersin Dincelli and Nic DePaula were the instructional designers for the course who assisted in the recording of the videos, reviewing material, creating slides, assessments and some of the content. Without their tremendous effort this would not have been possible. We also acknowledge the financial support for the recordings from the University at Albany as well as the support from Media and Marketing. Finally, thanks to Lisa Stephens who is the SUNY liaison to Coursera for being a strong supporter of the MOOC.",https://www.coursera.org/learn/cyber-conflicts
42,Introduction to HTML5,"Thanks to a growing number of software programs, it seems as if anyone can make a webpage. But what if you actually want to understand how the page was created? There are great textbooks and online resources for learning web design, but most of those resources require some background knowledge. This course is designed to help the novice who wants to gain confidence and knowledge.  We will explore the theory (what actually happens when you click on a link on a webpage?), the practical (what do I need to know to make my own page?), and the overlooked (I have the code, but how do I put it on the web to share with others?). Throughout the course there will be a strong emphasis on adhering to syntactic standards for validation and semantic standards to promote wide accessibility for users with disabilities.

This course will appeal to a wide variety of people, but specifically those who would like a step-by-step description of the basics. There are no prerequisites for this course and it is assumed that students have no prior programming skills or IT experience. The course will culminate in a small final project that will require the completion of a very simple page with links and images. The focus of this course is on the basics, not appearance. You can see a sample final HTML page at https://example-site-1--wd4ehtml.repl.co/ .

This is the first course in the Web Design For Everybody specialization. Subsequent courses focus on the marketable skills of styling the page with CSS3, adding interactivity with JavaScript and enhancing the styling with responsive design.",https://www.coursera.org/learn/html
43,Python Data Structures,"This course will introduce the core data structures of the Python programming language. We will move past the basics of procedural programming and explore how we can use the Python built-in data structures such as lists, dictionaries, and tuples to perform increasingly complex data analysis. This course will cover Chapters 6-10 of the textbook “Python for Everybody”.  This course covers Python 3.",https://www.coursera.org/learn/python-data
44,"Graph Search, Shortest Paths, and Data Structures","The primary topics in this part of the specialization are: data structures (heaps, balanced search trees, hash tables, bloom filters), graph primitives (applications of breadth-first and depth-first search, connectivity, shortest paths), and their applications (ranging from deduplication to social network analysis).",https://www.coursera.org/learn/algorithms-graphs-data-structures
45,Build a Modern Computer from First Principles: Nand to Tetris Part II (project-centered course),"In this project-centered course you will build a modern software hierarchy, designed to enable the translation and execution of object-based, high-level languages on a bare-bone computer hardware platform. In particular, you will implement a virtual machine and a compiler for a simple, Java-like programming language, and you will develop a basic operating system that closes gaps between the high-level language and the underlying hardware platform. In the process, you will gain a deep, hands-on understanding of numerous topics in applied computer science, e.g. stack processing, parsing, code generation, and classical algorithms and data structures for memory management, vector graphics, input-output handling, and various other topics that lie at the very core of every modern computer system. This is a self-contained course: all the knowledge necessary to succeed in the course and build the various systems will be given as part of the learning experience. The only prerequisite is knowledge of programming at the level acquired in introduction to computer science courses. All the software tools and materials that are necessary to complete the course will be supplied freely after you enrol in the course.

This course is accompanied by the textbook ""The Elements of Computing Systems"" (Nisan and Schocken, MIT Press). While not required for taking the course, the book provides a convenient coverage of all the course topics. The book is available in either hardcopy or ebook form, and MIT Press is offering a 30% discount off the cover price by using the discount code MNTT30 at https://mitpress.mit.edu/books/elements-computing-systems. 

The course consists of six modules, each comprising a series of video lectures, and a project. You will need about 2-3 hours to watch each module's lectures, and about 15 hours to complete each one of the six projects. The course can be completed in six weeks, but you are welcome to take it at your own pace. You can watch a TED talk about this course by Googling ""nand2tetris TED talk"". 

*About Project-Centered Courses: Project-centered courses are designed to help you complete a personally meaningful real-world project, with your instructor and a community of learners with similar goals providing guidance and suggestions along the way. By actively applying new concepts as you learn, you’ll master the course content more efficiently; you’ll also get a head start on using the skills you gain to make positive changes in your life and career. When you complete the course, you’ll have a finished project that you’ll be proud to use and share.",https://www.coursera.org/learn/nand2tetris2
46,Agile with Atlassian Jira,"This course discusses common foundational principles and practices used by agile methodologies, providing you with a flexible set of tools to use in your role (e.g. product owner, scrum master, project manager, team member) on an agile team. Learn agile and lean principles, including kanban and scrum, and use Jira Software Cloud as the tool to apply hands-on exercises in these topics. The course includes instruction on company-managed and team-managed Jira projects.  After completing this course, you will have a strong foundational understanding of agile principles and practices and hands-on experience with Jira Software Cloud. Site administrators will be able to perform basic administration tasks. You will be able to continuously configure your Jira projects to match your team's custom agile methodology.

Once completing this course, you will be prepared to earn your first Atlassian credential: https://go.atlassian.com/coursera-apb-330

*You can use a free Jira Software Cloud site to complete the hands-on labs associated with this course. This will require a Windows, Mac, or Linux computer.",https://www.coursera.org/learn/agile-atlassian-jira
47,Programming for a Networked World ,"Want to learn the basics of computer programming in a fun and innovative way? This course introduces computer programming using an educational block-based visual programming environment called NetsBlox (https://editor.netsblox.org/), emphasizing modern computer science concepts like networking, the internet, and distributed computing. The curriculum is hands-on, focusing on translating ideas into working computer programs and developing a mastery of practical computational literacy. After completing this course, you will have a solid foundation to learn professional languages like Python, Java, etc. The course is especially suitable for K12 teachers and students who want to get a gentle introduction to computer science.",https://www.coursera.org/learn/programming-for-a-networked-world
48,Software Architecture Patterns for Big Data,"The course is intended for individuals looking to understand the architecture patterns necessary to take large software systems that make use of big data to production. You will transform big data prototypes into high quality tested production software. After measuring the performance characteristics of distributed systems, you will identify trouble areas and implement scalable solutions to improve performance. Upon completion of the course you will know how to scale production data stores to perform under load, designing load tests to ensure applications meet performance requirements.

This course can be taken for academic credit as part of CU Boulder’s MS in Data Science or MS in Computer Science degrees offered on the Coursera platform. These fully accredited graduate degrees offer targeted courses, short 8-week sessions, and pay-as-you-go tuition. Admission is based on performance in three preliminary courses, not academic history. CU degrees on Coursera are ideal for recent graduates or working professionals. Learn more: 

MS in Data Science: https://www.coursera.org/degrees/master-of-science-data-science-boulder 

MS in Computer Science: https://coursera.org/degrees/ms-computer-science-boulder",https://www.coursera.org/learn/software-architecture-patterns-for-big-data
49,Search Engines for Web and Enterprise Data,"This course introduces the technologies behind web and search engines, including document indexing, searching and ranking. You will also learn different performance metrics for evaluating search quality, methods for understanding user intent and document semantics, and advanced applications including recommendation systems and summarization. Real-life examples and case studies are provided to reinforce the understanding of search algorithms.",https://www.coursera.org/learn/search-engine
50,Hands-on Introduction to Linux Commands and Shell Scripting,"This course provides a practical understanding of common Linux / UNIX shell commands. In this beginner friendly course, you will learn about the Linux basics, Shell commands, and Bash shell scripting.    You will begin this course with an introduction to Linux and explore the Linux architecture. You will interact with the Linux Terminal, execute commands, navigate directories, edit files, as well as install and update software. 

Next, you’ll become familiar with commonly used Linux commands. You will work with general purpose commands like id, date, uname, ps, top, echo, man; directory management commands such as pwd, cd, mkdir, rmdir, find, df; file management commands like cat, wget, more, head, tail, cp, mv, touch, tar, zip, unzip; access control command chmod; text processing commands - wc, grep, tr; as well as networking commands - hostname, ping, ifconfig and curl.  

You will then move on to learning the basics of shell scripting to automate a variety of tasks. You’ll create simple to more advanced shell scripts that involve Metacharacters, Quoting, Variables, Command substitution, I/O Redirection, Pipes & Filters, and Command line arguments. You will also schedule cron jobs using crontab. 

The course includes both video-based lectures as well as hands-on labs to practice and apply what you learn. You will have no-charge access to a virtual Linux server that you can access through your web browser, so you don't need to download and install anything to complete the labs. 

You’ll end this course with a final project as well as a final exam. In the final project you will demonstrate your knowledge of course concepts by performing your own Extract, Transform, and Load (ETL) process and create a scheduled backup script. 

This course is ideal for data engineers, data scientists, software developers, and cloud practitioners who want to get familiar with frequently used commands on Linux, MacOS and other Unix-like operating systems as well as get started with creating shell scripts.",https://www.coursera.org/learn/hands-on-introduction-to-linux-commands-and-shell-scripting
51,Operations Research (1): Models and Applications,"Operations Research (OR) is a field in which people use mathematical and engineering methods to study optimization problems in Business and Management, Economics, Computer Science, Civil Engineering, Industrial Engineering, etc. This course introduces frameworks and ideas about various types of optimization problems in the business world. In particular, we focus on how to formulate real business problems into mathematical models that can be solved by computers.",https://www.coursera.org/learn/operations-research-modeling
52,Introduction to Medical Software,"In this class, we present a broad overview of the field of medical software.  You will learn from Yale professors and a series of industry experts who connect the course concepts to their real world applications. We begin by discussing medical device regulatory structures, data privacy and cybersecurity regulations, and key support technologies such quality management systems and risk management. We then take a detailed look at the medical software life cycle, starting with identifying user needs, mapping these to system requirements and then the process of software design, coding, testing and validation. We continue by exploring issues related to the use of machine learning techniques in medical applications from both a software engineering and a regulatory perspective. We conclude with a discussion of the business and management issues in this area focusing on the impact on digital health on modern healthcare and issues related to starting new ventures.

This is a class aimed at either third- or fourth-year undergraduates in computer science, biomedical engineering, and related fields, and to junior software engineers currently either working in, or interested in moving to, the medical device industry.",https://www.coursera.org/learn/introduction-to-medical-software
53,Getting Started with Git and GitHub,"Get started with Git and GitHub in this self-paced, introductory course! You’ll become familiar with collaborative version control and popular Git platforms. Collaboration and social coding are crucial parts of contemporary Software Engineering practices and the DevOps culture.  You will begin this course with an overview of Git and Github fundamentals and explore key Git concepts such as branching and repositories, as well as the use of Git commands. You will also learn and practice various Git concepts such as forking, cloning and merging workflows using hands-on labs. And you’ll learn to use GitHub to work effectively as a team, and perform common Git operations, from both the Web UI and command line. 

The course wraps up with a final project where you will start building your portfolio by creating and sharing a public/open-source GitHub project. By completing this course you will demonstrate your Git and Github skills as well as add a project to your resume! 

All hands-on activities in this course can be performed using web-browser based tools and interfaces. Installation of any specialized software is NOT required on your own computer in order to complete the course.",https://www.coursera.org/learn/getting-started-with-git-and-github
54,Monitoring and Observability for Development and DevOps,"Application developers and DevOps professionals must ensure their app works at its best. However, these app may need help with bugs, slow speed, or subpar performance. Professionals need to monitor and observe its performance continually. Application monitoring involves identifying, measuring, and evaluating the effectiveness of an application. On the other hand, Observability refers to how well an app can be monitored by the data obtained from monitoring. Both monitoring and observability are necessary to gain insights into the system and ensure its proper functioning.

This course thoroughly introduces monitoring and observability, covering fundamental concepts and popular tools like Prometheus, Grafana, Mezmo (LogDNA), and Instana. You will also learn about the three pillars of observability and tracing for container applications and gain hands-on experience with the OpenTelemetry framework.

Throughout the course, you will complete interactive hands-on labs to apply your knowledge, and gain experience with the tools and techniques used by software and DevOps professionals.

By the end of this course, you will be able to demonstrate your knowledge of monitoring and observability, and you will gain the confidence to perform these tasks in a practical setting.",https://www.coursera.org/learn/monitoring-and-observability-for-development-and-devops
55,Programming with JavaScript,"JavaScript is the programming language that powers the modern web. In this course, you will learn the basic concepts of web development with JavaScript. You will work with functions, objects, arrays, variables, data types, the HTML DOM, and much more. You will learn how to use JavaScript and discover interactive possibilities with modern JavaScript technologies. Finally, you will learn about the practice of testing code and how to write a unit test using Jest.",https://www.coursera.org/learn/programming-with-javascript
56,Principles of UX/UI Design,"Learn the fundamentals of User Experience (UX) research and design. Become immersed in the UX process of identifying problems and iterating and testing designs to find appropriate solutions. You’ll learn how to empathize with users through best-practice research approaches, and create common UX artifacts such as user personas. And you’ll use UX insights to make appropriate design decisions.  By utilizing the User Interface (UI) design process, you will be able to create wireframes for features in Figma, and turn them into Minimum Viable Product (MVP) style prototypes from your mockups. You’ll also learn the core principles of design such as hierarchy and the use of grids.

By the end of this course you will be able to: 

• Design digital products that create value and solve a user's problems in meaningful ways. 
• Recognize what constitutes successful UX UI and evaluate existing interfaces for design consistency and quality.
•  Identify best practice interaction design methods and evaluate and improve your own and others' designs.
•  Create, share and test your UX UI designs following best practice guidelines.

This is a beginner course for learners who would like to prepare themselves for a career in UX  UI development. To succeed in this course, you do not need prior development experience, only basic internet navigation skills and an eagerness to learn.",https://www.coursera.org/learn/principles-of-ux-ui-design
57,Introduction to High-Performance and Parallel Computing,"This course introduces the fundamentals of high-performance and parallel computing. It is targeted to scientists, engineers, scholars, really everyone seeking to develop the software skills necessary for work in parallel software environments. These skills include big-data analysis, machine learning, parallel programming, and optimization. We will cover the basics of Linux environments and bash scripting all the way to high throughput computing and parallelizing code. We recommend you are familiar with either Fortran 90, C++, or Python to complete some of the programming assignments.  After completing this course, you will familiar with:

*The components of a high-performance distributed computing system
*Types of parallel programming models and the situations in which they might be used
*High-throughput computing
*Shared memory parallelism
*Distributed memory parallelism
*Navigating a typical Linux-based HPC environment
*Assessing and analyzing application scalability including weak and strong scaling
*Quantifying the processing, data, and cost requirements for a computational project or workflow

This course can be taken for academic credit as part of CU Boulder’s Master of Science in Data Science (MS-DS) degree offered on the Coursera platform. The MS-DS is an interdisciplinary degree that brings together faculty from CU Boulder’s departments of Applied Mathematics, Computer Science, Information Science, and others. With performance-based admissions and no application process, the MS-DS is ideal for individuals with a broad range of undergraduate education and/or professional experience in computer science, information science, mathematics, and statistics. Learn more about the MS-DS program at https://www.coursera.org/degrees/master-of-science-data-science-boulder.",https://www.coursera.org/learn/introduction-high-performance-computing
58,Developing Back-End Apps with Node.js and Express,"In a recent Stack Overflow survey, Node.js was used by about 50% of the developers who answered the survey, making it the most used server-side technology. Express ranked as the fourth most popular web technology overall, making it the most popular server-side web framework.    In this course, you will focus on Node.js and Express. Specifically, you will 

- develop applications using asynchronous callbacks and promises

- create REST APIs and perform CRUD operations

- implement authentication and session management

Throughout the course, you will complete numerous hands-on labs to gain practical experience. At the end of the course, you will demonstrate your Node skills with a final project to build your portfolio.
 
This course will help you succeed as a back-end or full-stack developer. It suits those in IT looking to step up in their careers or new graduates seeking to establish their server-side skills. This course suits those who need to manage cloud-centric projects.

Note: This course requires knowledge of JavaScript and Git.",https://www.coursera.org/learn/developing-backend-apps-with-nodejs-and-express
59,Coding Interview Preparation,"The final course in this program will help prepare you for the unique aspects of a coding job interview, with approaches to problem-solving and computer science foundations needed to land the job. Ultimately you’ll gain strategic insights and tips for successful interviewing.  By the end of this course, you'll have knowledge of:
•  Appropriate communication during a coding interview
•  Successful interviewing strategies
• Using pseudocode
•  The fundamentals of computer science
• The capabilities of data structures and how to implement them
• How to review data structures in the context of coding interviews
•  The concept of algorithms and common approaches to working with them
•  How to visualize an algorithm
•  Combining new and previously learned coding patterns to solve problems

Ideally, you should have completed all the courses in this professional certificate.",https://www.coursera.org/learn/coding-interview-preparation
60,Computer Vision Basics,"By the end of this course, learners will understand what computer vision is, as well as its mission of making computers see and interpret the world as humans do, by learning core concepts of the field and receiving an introduction to human vision capabilities. They are equipped to identify some key application areas of computer vision and understand the digital imaging process. The course covers crucial elements that enable computer vision: digital signal processing, neuroscience and artificial intelligence. Topics include color, light and image formation; early, mid- and high-level vision; and mathematics essential for computer vision. Learners will be able to apply mathematical techniques to complete computer vision tasks.  This course is ideal for anyone curious about or interested in exploring the concepts of computer vision. It is also useful for those who desire a refresher course in mathematical concepts of computer vision. Learners should have basic programming skills and experience (understanding of for loops, if/else statements), specifically in MATLAB (Mathworks provides the basics here: https://www.mathworks.com/learn/tutorials/matlab-onramp.html). Learners should also be familiar with the following: basic linear algebra (matrix vector operations and notation), 3D co-ordinate systems and transformations, basic calculus (derivatives and integration) and basic probability (random variables).  

Material includes online lectures, videos, demos, hands-on exercises, project work, readings and discussions. Learners gain experience writing computer vision programs through online labs using MATLAB* and supporting toolboxes.

 * A free license to install MATLAB for the duration of the course is available from MathWorks.",https://www.coursera.org/learn/computer-vision-basics
61,Introduction to 3D Modeling,"On this four-week practical course from the University of Michigan, you’ll not only learn how to use the Rhino software to create your 3D models, but you’ll also gain basic design skills to help bring your imagination to life. This course will guide you through 3D modeling within Rhino, so you’ll cover the fundamentals of the software as well as 3D modeling in general. You’ll first look at how to navigate the user interface and the different tools that you’ll be using to create models throughout this course. You’ll familiarize yourself with the 3D space and 3D objects before jumping straight in to create your own objects and building blocks.  Design is a vital part of 3D modeling. You can be a master of the software but if you aren’t aware of fundamental design concepts, you won’t be able to truly unleash your potential. You’ll build your basic design skills by looking at line, shape, form, and space, before creating and editing 2D line forms that you’ll transform into patterned mandalas and 3D tile wall designs. 

This course will guide you through the concept of profile modeling and will allow you to utilize 3D surface and 3D solid modeling tools to create and edit more complex designs. To round out your foundational knowledge, you’ll dive into 3D rendering and creating 3D printable models. Then, once you’ve completed each step of the course, you can bring your newfound skills together into one final 3D modeling project.

This course has been designed for anyone interested in 3D design and learning how to use 3D modeling software. You don’t need any previous knowledge or experience to benefit from this course. It will be particularly useful to Architects, Designers, Engineers, or anyone studying in these fields.",https://www.coursera.org/learn/introduction-to-3d-modeling
62,Learn to Program: Crafting Quality Code,"Not all programs are created equal.  In this course, we'll focus on writing quality code that runs correctly and efficiently.  We'll design, code and validate our programs and learn how to compare programs that are addressing the same task.",https://www.coursera.org/learn/program-code
63,Building Web Applications in PHP,"In this course, you'll explore the basic structure of a web application, and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, including GET/POST/Redirect. You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements. An introduction to Cascading Style Sheets (CSS) will allow you to style markup for webpages. Lastly, you'll gain the skills and knowledge to install and use an integrated PHP/MySQL environment like XAMPP or MAMP.",https://www.coursera.org/learn/web-applications-php
64,React Basics,"React is a powerful JavaScript library that you can use to build user interfaces for web and mobile applications (apps). In this course, you will explore the fundamental concepts that underpin the React library and learn the basic skills required to build a simple, fast, and scalable app. By the end of this course, you will be able to:
• Use reusable components to render views where data changes over time
• Create more scalable and maintainable websites and apps 
• Use props to pass data between components 
• Create dynamic and interactive web pages and apps
• Use forms to allow users to interact with the web page 
• Build an application in React

You’ll gain experience with the following tools and software: 
• React.js
• JSX
• React
• HTML, CSS and JavaScript 
• VSCode

You will be able to leverage the potential of this course to develop new skills, improve productivity, act effectively with data and boost your career.

This is a beginner course for learners who would like to prepare themselves for a career in mobile development. To succeed in this course, you do not need prior development experience, only basic internet navigation skills and an eagerness to get started with coding.",https://www.coursera.org/learn/react-basics
65,Cryptography,"This course will introduce you to the foundations of modern cryptography, with an eye toward practical applications.",https://www.coursera.org/learn/cryptography
66,Design Computing: 3D Modeling in Rhinoceros with Python/Rhinoscript,"Why should a designer learn to code? As our world is increasingly impacted by the use of algorithms, designers must learn how to use and create design computing programs. Designers must go beyond the narrowly focused use of computers in the automation of simple drafting/modeling tasks and instead explore the extraordinary potential digitalization holds for design culture/practice.

Structured around a series of fundamental design problems, this course will show you Python code in terms of its rules and syntax, and what we can do with it in its application and design. So, by the end of this course, you will know the fundamentals of Python and Rhino script, but importantly, through the lens of their application in geometrically focused design lessons and exercises.


Subjects covered in this course
- An introduction to Design Computing as a subject and why designers should learn to code.

- The fundamentals of coding in the Python scripting language. By the end of the course students will be familiar with the basic structure and syntax of this language.

- The understanding and application of Rhinoscriptsyntax, a native coding language in Rhinoceros that’s imported into Python, which allows one to create and control geometries through authoring code.

- The application of Procedural Logics - the structuring of coding systems to produce variable geometric form.

- The output of geometries in still and animate forms.",https://www.coursera.org/learn/3d-modeling-rhinoscript
67,VFX with Adobe After Effects from Novice to Expert,"Embark on a transformative journey into Adobe After Effects, gaining fundamental and advanced skills. Explore the intricacies of the interface, create compositions and master timeline dynamics. Dive into hands-on experiences, shaping proficiency in animation, advanced text techniques, and masking for enhanced visual effects. Discover the profound impact of light, colors, and perspective, refining chroma keying, compositing, and motion tracking skills. Immerse yourself in 3D integration, lighting, and tracking for dynamic storytelling. Master advanced techniques like Graph Editor precision, keyframe intricacies, and 3D text creation. Elevate skills in keying, particle systems, and cutting-edge special effects, crafting polished compositions. Conclude with foundational color correction, Lumetri Panel mastery, and effective portfolio building. By the end of this course, you'll:

1) Acquire a robust set of skills in Adobe After Effects. 
2) Proficiently navigate the After Effects interface, master the art of composition creation and effectively manipulate the timeline for seamless animations. 
3) Understand the profound impact of light, colors, and perspective, employing chroma keying, compositing, and motion tracking for impactful visual storytelling. 
4) Your skills will culminate in advanced keying, particle systems, and special effects, resulting in polished and visually engaging compositions. 

The course concludes with proficiency in color correction, mastery of the Lumetri Panel, and effective portfolio-building strategies, ensuring you are well-equipped for professional success in Adobe After Effects.",https://www.coursera.org/learn/vfx-with-adobe-after-effects-from-novice-to-expert
68,The Arduino Platform and C Programming,"The Arduino is an open-source computer hardware/software platform for building digital devices and interactive objects that can sense and control the physical world around them. In this class you will learn how the Arduino platform works in terms of the physical board and libraries and the IDE (integrated development environment). You will also learn about shields, which are smaller boards that plug into the main Arduino board to perform other functions such as sensing light, heat, GPS tracking, or providing a user interface display. The course will also cover programming the Arduino using C code and accessing the pins on the board via the software to control external devices. Please note that this course does not include discussion forums. Upon completing this course, you will be able to:
1.       Outline the composition of the Arduino development board
2.       Describe what it means to program the board's firmware
3.       Read board schematics
4.       Install Arduino IDE
5.       Describe what ""shields"" are and how they are used
6.       Specify the role of libraries in the use of shields
7.       Compile and run a program
8.       Name C Variables and Types
9.       Name common C operators
10.     Use conditionals and loops
11.     Explain functions, their definition and invocation
12.     Explain the implications of global variables
13.     Undertake the Arduino build process
14.     Describe the role of the tools behind the IDE
15.     Describe how to invoke functions in classes
16.     Explain the structure of an Arduino sketch
17.     Access the pins of the Arduino
18.     Differentiate between digital and analog pin
19.     Debug embedded software
20.     Explain the importance of controllability and observability in the debugging process
21.     Describe common debugging architectures for embedded systems
22.     Explain how the UART Serial communication protocol works
23.     Describe how the Arduino Serial library performs serial communication",https://www.coursera.org/learn/arduino-platform
69,"Introduction to Software, Programming, and Databases ","Take the next step in your IT professional journey with this self-paced, beginner friendly course! This course covers the basics of software, cloud computing, web browsers, application development concepts, programming languages, and database fundamentals.  You will first be introduced to computing platforms and software applications. You’ll learn about the software lifecycle, software compatibility across different platforms, and software versioning. You'll also learn about installing and managing web browsers, using extensions and plug-ins, and keeping them secure and updated. 

Next you will learn about basic programming concepts, coding logic, and the different programming languages like Python. You’ll move on to data and database fundamentals and learn how to use, interface with, access and backup databases. 

After completing this course, you'll have a better grasp of software processes and feel more confident about using and securing applications. From mobile phone operating systems to workplace database applications, this course covers a wide range of software. Discover the benefits of cloud-based technologies and see how using the cloud can help businesses create and deploy applications faster.  

To solidify your understanding and put your skills to the test, the course includes numerous hands-on labs. It ends with a final project where you’ll showcase your newfound expertise and demonstrate your understanding of software, programming, and databases.  

Enroll now to take the next step in developing expertise in IT Fundamentals.",https://www.coursera.org/learn/introduction-software-programming-and-databases
70,"Divide and Conquer, Sorting and Searching, and Randomized Algorithms","The primary topics in this part of the specialization are: asymptotic (""Big-oh"") notation, sorting and searching, divide and conquer (master method, integer and matrix multiplication, closest pair), and randomized algorithms (QuickSort, contraction algorithm for min cuts).",https://www.coursera.org/learn/algorithms-divide-conquer
71,Discrete Optimization,"Tired of solving Sudokus by hand? This class teaches you how to solve complex search problems with discrete optimization concepts and algorithms, including constraint programming, local search, and mixed-integer programming. Optimization technology is ubiquitous in our society. It schedules planes and their crews, coordinates the production of steel, and organizes the transportation of iron ore from the mines to the ports. Optimization clears the day-ahead and real-time markets to deliver electricity to millions of people. It organizes kidney exchanges and cancer treatments and helps scientists understand the fundamental fabric of life, control complex chemical reactions, and design drugs that may benefit billions of individuals.

This class is an introduction to discrete optimization and exposes students to some of the most fundamental concepts and algorithms in the field. It covers constraint programming, local search, and mixed-integer programming from their foundations to their applications for complex practical problems in areas such as scheduling, vehicle routing, supply-chain optimization, and resource allocation.",https://www.coursera.org/learn/discrete-optimization
72,"C++ For C Programmers, Part A",This course is for experienced C programmers who want to program in C++. The examples and exercises require a basic understanding of algorithms and object-oriented software.,https://www.coursera.org/learn/c-plus-plus-a
73,Cyber Security Fundamentals,"This course is intended to provide a general introduction to key concepts in cyber security. It is aimed at anyone with a good general knowledge of information and communications technology. The nature, scope and importance of cyber security are explained, and key concepts are justified and explored. This includes examining the types of threat that cyber security must address, as well as the range of mechanisms, both technological and procedural, that can be deployed. The role of cryptography in providing security is explored, including how algorithms and keys play their part in enabling cyber security. The key supporting function played by key management is identified, including why the use of cryptographic functions depends on it.

The need for security management in an organisation is explained, and its main elements are introduced - including the key role played by risk management. The importance of standardised approaches to security management is explained, as is the notion of compliance.",https://www.coursera.org/learn/cyber-security-fundamentals
74,Problem Solving Using Computational Thinking,"Have you ever heard that computers ""think""? Believe it or not, computers really do not think. Instead, they do exactly what we tell them to do. Programming is, ""telling the computer what to do and how to do it."" Before you can think about programming a computer, you need to work out exactly what it is you want to tell the computer to do. Thinking through problems this way is Computational Thinking. Computational Thinking allows us to take complex problems, understand what the problem is, and develop solutions. We can present these solutions in a way that both computers and people can understand.

The course includes an introduction to computational thinking and a broad definition of each concept, a series of real-world cases that illustrate how computational thinking can be used to solve complex problems, and a student project that asks you to apply what they are learning about Computational Thinking in a real-world situation. This project will be completed in stages (and milestones) and will also include a final disaster response plan you'll share with other learners like you.

This course is designed for anyone who is just beginning programming, is thinking about programming or simply wants to understand a new way of thinking about problems critically. No prior programming is needed. The examples in this course may feel particularly relevant to a High School audience and were designed to be understandable by anyone.

You will learn:
-To define Computational Thinking components including abstraction, problem identification, decomposition, pattern recognition, algorithms, and evaluating solutions
-To recognize Computational Thinking concepts in practice through a series of real-world case examples
-To develop solutions through the application of Computational Thinking concepts to real world problems",https://www.coursera.org/learn/compthinking
75,Operations Research (2): Optimization Algorithms,"Operations Research (OR) is a field in which people use mathematical and engineering methods to study optimization problems in Business and Management, Economics, Computer Science, Civil Engineering, Electrical Engineering, etc. The series of courses consists of three parts, we focus on deterministic optimization techniques, which is a major part of the field of OR.
As the second part of the series, we study some efficient algorithms for solving linear programs, integer programs, and nonlinear programs.
We also introduce the basic computer implementation of solving different programs, integer programs, and nonlinear programs and thus an example of algorithm application will be discussed.",https://www.coursera.org/learn/operations-research-algorithms
76,Introduction to Computers and Office Productivity Software,"In this course, you will learn the following essential computer skills for the digital age: Major hardware components of a computer system
Different types of software on a computer system
Photo Editing using GIMP
Word processing applications, including MS Word, MS Excel, and MS PowerPoint",https://www.coursera.org/learn/introduction-to-computers-and-office-productivity-software
77,Python Basics,"This course introduces the basics of Python 3, including conditional execution and iteration as control structures, and strings and lists as data structures. You'll program an on-screen Turtle to draw pretty pictures. You'll also learn to draw reference diagrams as a way to reason about program executions, which will help to build up your debugging skills. The course has no prerequisites. It will cover Chapters 1-9 of the textbook ""Fundamentals of Python Programming,"" which is the accompanying text (optional and free) for this course. The course is for you if you're a newcomer to Python programming, if you need a refresher on Python basics, or if you may have had some exposure to Python programming but want a more in-depth exposition and vocabulary for describing and reasoning about programs.

This is the first of five courses in the Python 3 Programming Specialization.",https://www.coursera.org/learn/python-basics
78,Building AI Powered Chatbots Without Programming,"This course will teach you how to create useful chatbots without the need to write any code. Leveraging IBM Watson's Natural Language Processing capabilities, you'll learn how to plan, implement, test, and deploy chatbots that delight your users, rather than frustrate them.

True to our promise of not requiring any code, you'll learn how to visually create chatbots with Watson Assistant (formerly Watson Conversation) and how to deploy them on your own website through a handy WordPress plugin. Don't have a website? No worries, one will be provided to you.

Chatbots are a hot topic in our industry and are about to go big. New jobs requiring this specific skill are being added every day, consultants demand premium rates, and the interest in chatbots is quickly exploding.

Gartner predicts that by 2020, 85% of customer interactions with the enterprise will be through automated means (that's chatbots and related technologies).

Here is your chance to learn this highly in demand set of skills with a gentle introduction to the topic that leaves no stone unturned.",https://www.coursera.org/learn/building-ai-powered-chatbots
79,Application Development using Microservices and Serverless ,"Welcome to this introductory course on microservices and serverless, essential technologies for cloud native and application modernization workloads.  Rather than building large applications, known as monoliths, that perform all the functionality, microservices break down larger applications into smaller pieces that are independently maintainable and scalable, providing a host of benefits. This architecture is now used in the largest software organizations in the world, because it provides cost benefits, team autonomy, and other advantages. 

Likewise, serverless has emerged as an increasingly popular compute option in the cloud era. Giving developers and operators the ability to run applications without managing underlying infrastructure.  

In this course, you will create microservices using various methodologies. You will create REST APIs using Python and Flask. Next, you will learn the basics of Serverless applications, and how to run your applications on the IBM Cloud Code Engine.  

The course contains several hands-on labs which allow you to practice and apply the content you learn in the course. 

In the final project, you will create a front-end application composed of several microservices and deploy them on the Cloud using serverless.",https://www.coursera.org/learn/applications-development-microservices-serverless-openshift
80,Connect and Protect: Networks and Network Security,"This is the third course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to apply for an entry-level cybersecurity job. You’ll build on your understanding of the topics that were introduced in the second Google Cybersecurity Certificate course. In this course, you will explore how networks connect multiple devices and allow them to communicate. You'll start with the fundamentals of modern networking operations and protocols. For example, you'll learn about the Transmission Control Protocol / Internet Protocol (TCP/IP) model and how network hardware, like routers and modems, allow your computer to send and receive information on the internet. Then, you'll learn about network security. Organizations often store and send valuable information on their networks, so networks are common targets of cyber attacks. By the end of this course, you'll be able to recognize network-level vulnerabilities, and explain how to secure a network using firewalls, system hardening, and virtual private networks. 

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete this certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Describe the structure of different computer networks.
- Illustrate how data is sent and received over a network.
- Recognize common network protocols.
- Identify common network security measures and protocols.
- Explain how to secure a network against intrusion tactics.
- Compare and contrast local networks to cloud computing.
- Explain the different types of system hardening techniques.",https://www.coursera.org/learn/networks-and-network-security
81,Introduction to Technical Writing,"Technical Writing seamlessly blends the art of communication with the nuances of technology. Tailored for a diverse audience, including writers, communicators, engineers, and IT professionals, this course serves as a beacon, guiding participants toward the creation of effective technical documents tailored to specialized audiences. Starting with the fundamentals of technical writing, participants will delve into its history, discern its unique features, and grasp the core elements. This segment emphasizes audience-centric content, the journey from planning to publishing, and the importance of continuous feedback.

Transitioning to design principles and tools, the course sharpens participants' skills in document aesthetics from typography to layouts. They'll also explore essential modern tools, including advanced word processors and collaboration platforms like GitHub.

The next phase introduces a range of technical documents, from user manuals to API documentation, emphasizing the ethical responsibilities of writers. It underscores creating accessible, globally resonant content with cultural sensitivity and localization insights.

Concluding with advanced topics and career advancement, participants will tackle complex documentation challenges, embrace multimedia elements, and explore writing for platforms like VR and AR. This segment also preps participants to build a strong technical writing portfolio and foster professional networks.

By the course's end, participants will emerge as proficient technical writers, skilled in varied writing forms, contemporary tools, and ethical documentation, ready to showcase their expertise and embark on a rewarding career journey.

This is a beginner to advance level of course, intended for learners with a background in Computer Science and Technology and professionals looking to upgrade their skills in Technical Writing.",https://www.coursera.org/learn/technical-writing-introduction
82,Object-Oriented Design,"This course takes Java beginners to the next level by covering object-oriented analysis and design. You will discover how to create modular, flexible, and reusable software, by applying object-oriented design principles and guidelines. And, you will be able to communicate these designs in a visual notation known as Unified Modelling Language (UML). You will be challenged in the Capstone Project to apply your knowledge of object-oriented design by evolving and documenting the Java codebase for an Android application with corresponding UML documentation.

After completing this course, you will be able to: 
• Apply the Class Responsibility Collaborator (CRC) technique to analyze and design the object-oriented model for a problem. 
• Explain and apply object-oriented modeling principles and their purpose (e.g., abstraction, encapsulation, decomposition, generalization).
• Explain and apply different types of inheritance
• Explain the difference between association, aggregation, and composition dependencies.
• Express object-oriented models as Unified Modeling Language (UML) class diagrams.
• Translate between UML class diagrams and equivalent Java code.
• Apply design guidelines for modularity, separation of concerns, information hiding, and conceptual integrity to create a flexible, reusable, maintainable design.
• Explain the tradeoff between cohesion and coupling.",https://www.coursera.org/learn/object-oriented-design
83,Programming with Scratch,"Learning coding is not only about understanding the programming language being used, but also developing important computational thinking skills, which are useful for problem solving across many disciplinary areas. In this course, students will learn basic programming skills by creating interactive storybooks, animations, and games with Scratch, which is a block-based visual programming language for anyone new to coding.",https://www.coursera.org/learn/programming-with-scratch
84,.Net Full Stack Foundation,"Embark on a deep dive into the dynamic universe of .Net Full Stack Development with this comprehensive course. This course is meticulously crafted for those venturing into the .Net domain, ensuring a solid foundational grasp. In the first module, Introduction to ASP.NET, dive into .Net development, acquainting yourself with the essence of ASP.NET, the .NET framework, and its synergy with the C# language. Experience first-hand the crafting of dynamic web applications and basic programming techniques using .Net tools.

Progressing to the second module, C# Programming Fundamentals, delve into C# essentials. This module introduces core elements like syntax, variables, and control structures, bolstered by hands-on assignments designed to enhance your programming skill set.

Finally, in the third module, Advanced C# Programming, explore deeper facets of C#. From LINQ, delegates, and events to intricate OOP principles, this module ensures you grasp advanced concepts and master key techniques for robust exception handling.

By the end of this course, you'll possess a profound mastery over .Net Full Stack Development, poised to craft efficient .Net applications and primed to explore even more advanced .Net technologies.",https://www.coursera.org/learn/dot-net-full-stack-foundation
85,Introduction to Programming with MATLAB,"This course teaches computer programming to those with little to no previous experience. It uses the programming system and language called MATLAB to do so because it is easy to learn, versatile and very useful for engineers and other professionals. MATLAB is a special-purpose language that is an excellent choice for writing moderate-size programs that solve problems involving the manipulation of numbers. The design of the language makes it possible to write a powerful program in a few lines. The problems may be relatively complex, while the MATLAB programs that solve them are relatively simple: relative, that is, to the equivalent program written in a general-purpose language, such as C++ or Java. As a result, MATLAB is being used in a wide variety of domains from the natural sciences, through all disciplines of engineering, to finance, and beyond, and it is heavily used in industry. Hence, a solid background in MATLAB is an indispensable skill in today’s job market. Nevertheless, this course is not a MATLAB tutorial. It is an introductory programming course that uses MATLAB to illustrate general concepts in computer science and programming. Students who successfully complete this course will become familiar with general concepts in computer science, gain an understanding of the general concepts of programming, and obtain a solid foundation in the use of MATLAB.

Students taking the course will get a MATLAB Online license free of charge for the duration of the course. The students are encouraged to consult the eBook that this course is based on. More information about these resources can be found on the Resources menu on the right.",https://www.coursera.org/learn/matlab
86,Generative AI with Large Language Models,"In Generative AI with Large Language Models (LLMs), you’ll learn the fundamentals of how generative AI works, and how to deploy it in real-world applications. By taking this course, you'll learn to:
- Deeply understand generative AI, describing the key steps in a typical LLM-based generative AI lifecycle, from data gathering and model selection, to performance evaluation and deployment
- Describe in detail the transformer architecture that powers LLMs, how they’re trained, and how fine-tuning enables LLMs to be adapted to a variety of specific use cases
- Use empirical scaling laws to optimize the model's objective function across dataset size, compute budget, and inference requirements
- Apply state-of-the art training, tuning, inference, tools, and deployment methods to maximize the performance of models within the specific constraints of your project 
- Discuss the challenges and opportunities that generative AI creates for businesses after hearing stories from industry researchers and practitioners

Developers who have a good foundational understanding of how LLMs work, as well the best practices behind training and deploying them, will be able to make good decisions for their companies and more quickly build working prototypes. This course will support learners in building practical intuition about how to best utilize this exciting new technology.

This is an intermediate course, so you should have some experience coding in Python to get the most out of it. You should also be familiar with the basics of machine learning, such as supervised and unsupervised learning, loss functions, and splitting data into training, validation, and test sets. If you have taken the Machine Learning Specialization or Deep Learning Specialization from DeepLearning.AI, you’ll be ready to take this course and dive deeper into the fundamentals of generative AI.",https://www.coursera.org/learn/generative-ai-with-llms
87,Foundations of User Experience (UX) Design,"Foundations of User Experience (UX) Design is the first of a series of seven courses that will equip you with the skills needed to apply to entry-level jobs in user experience design. UX designers focus on the interactions that people have with products like websites, mobile apps, and physical objects. UX designers make those everyday interactions usable, enjoyable, and accessible. The role of an entry-level UX designer might include empathizing with users, defining their pain points, coming up with ideas for design solutions, creating wireframes, prototypes, and mockups, and testing designs to get feedback.  Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios.

Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers. No previous experience is necessary.

By the end of this course, you will be able to: 
   - Define the field of UX and explain why it’s important for consumers and businesses.
   - Understand foundational concepts in UX design, such as user-centered design, the design thinking framework, accessibility, and equity-focused design. 
   - Identify the factors that contribute to great user experience design.
   - Review common job responsibilities of entry-level UX designers and teams that they work with.
   - Explore job opportunities and career paths within the field of user experience.  
   - Explain why design sprints are an important and useful part of a UX designer’s work.
  - Describe common UX research methods. 
   - Identify and account for biases in UX research.",https://www.coursera.org/learn/foundations-user-experience-design
88,Play It Safe: Manage Security Risks,"This is the second course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to apply for an entry-level cybersecurity job. You’ll build on your understanding of the topics that were introduced in the first Google Cybersecurity Certificate course. In this course, you will take a deeper dive into concepts introduced in the first course, with an emphasis on how cybersecurity professionals use frameworks and controls to protect business operations. In particular, you'll identify the steps of risk management and explore common threats, risks, and vulnerabilities. Additionally, you'll explore Security Information and Event Management (SIEM) data and use a playbook to respond to identified threats, risks, and vulnerabilities. Finally, you will take an important step towards becoming a cybersecurity professional and practice performing a security audit.

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete this certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Identify the common threats, risks, and vulnerabilities to business operations.
- Understand the threats, risks, and vulnerabilities that entry-level cybersecurity analysts are most focused on.
- Comprehend the purpose of security frameworks and controls.
- Describe the confidentiality, integrity, and availability (CIA) triad.
- Explain the National Institute of Standards and Technology (NIST) framework.
- Explore and practice conducting a security audit.
- Use a playbook to respond to threats, risks, and vulnerabilities.",https://www.coursera.org/learn/manage-security-risks
89,"Start the UX Design Process: Empathize, Define, and Ideate","Start the UX Design Process: Empathize, Define, Ideate is the second course in a certificate program that will equip you with the skills needed to apply to entry-level jobs in user experience (UX) design. In this course, you’ll complete the first phases of the design process for a project that you’ll be able to include in your portfolio. You will learn how to empathize with users and understand their pain points, define user needs using problem statements, and come up with lots of ideas for solutions to those user problems.  Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios.

Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers. No previous experience is necessary.

By the end of this course, you will be able to:
   - Empathize with users to understand their needs and pain points.
   - Create empathy maps, personas, user stories, and user journey maps to understand user needs.
   - Develop problem statements to define user needs. 
   - Generate ideas for possible solutions to user problems. 
   - Conduct competitive audits.
   - Start designing a mobile app, a new project to include in your professional UX portfolio.",https://www.coursera.org/learn/start-ux-design-process
90,Tools of the Trade: Linux and SQL,"This is the fourth course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to apply for an entry-level cybersecurity job. You’ll build on your understanding of the topics that were introduced in the third Google Cybersecurity Certificate course. In this course, you will explore computing skills that you’ll use on-the-job as a cybersecurity analyst. First, you'll practice using Linux, an operating system commonly used by cybersecurity professionals. For example, you'll use the Linux command line through the Bash shell to navigate and manage the file system and authenticate users. Then, you'll use SQL to communicate with a database. 

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete this certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Explain the relationship between operating systems, applications, and hardware.
- Compare a graphical user interface to a command line interface.
- Identify the unique features of common Linux distributions.
- Navigate and manage the file system using Linux commands via the Bash shell.
- Use Linux commands via the Bash shell to authenticate and authorize users.
- Describe how a relational database is organized.
- Use SQL to retrieve information from a database.
- Apply filters to SQL queries and use joins to combine multiple tables.",https://www.coursera.org/learn/linux-and-sql
91,Linear Algebra for Machine Learning and Data Science,"Newly updated for 2024!  After completing this course, learners will be able to:

• Represent data as vectors and matrices and identify their properties using concepts of singularity, rank, and linear independence, etc.
• Apply common vector and matrix algebra operations like dot product, inverse, and determinants 
• Express certain types of matrix operations as linear transformations 
• Apply concepts of eigenvalues and eigenvectors to machine learning problems

Mathematics for Machine Learning and Data science is a foundational online program created in by DeepLearning.AI and taught by Luis Serrano. This beginner-friendly program is where you’ll master the fundamental mathematics toolkit of machine learning.

Many machine learning engineers and data scientists need help with mathematics, and even experienced practitioners can feel held back by a lack of math skills. This Specialization uses innovative pedagogy in mathematics to help you learn quickly and intuitively, with courses that use easy-to-follow plugins and visualizations to help you see how the math behind machine learning actually works. 

Upon completion, you’ll understand the mathematics behind all the most common algorithms and data analysis techniques — plus the know-how to incorporate them into your machine learning career.

This is a beginner-friendly program, with a recommended background of at least high school mathematics (functions, basic algebra). We also recommend a basic familiarity with Python (loops, functions, if/else statements, lists/dictionaries, importing libraries), as labs use Python and Jupyter Notebooks to demonstrate learning objectives in the environment where they’re most applicable to machine learning and data science. If you are already familiar with the concepts of linear algebra, Course 1 will provide a good review, or you can choose to take Course 2: Calculus for Machine Learning and Data Science and Course 3: Probability and Statistics for Machine Learning and Data Science, of this specialization.",https://www.coursera.org/learn/machine-learning-linear-algebra
92,Build Wireframes and Low-Fidelity Prototypes,"Build Wireframes and Low-Fidelity Prototypes is the third course in a certificate program that will equip you with the skills you need to apply to entry-level jobs in user experience (UX) design. In this course, you’ll continue to design a mobile app for your professional UX portfolio. You’ll start by creating storyboards and getting familiar with the basics of drawing. Then, you'll create paper wireframes and digital wireframes using the design tool Figma. You’ll also create a paper prototype and a digital low-fidelity prototype in Figma.  Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios. Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers.

By the end of this course, you will be able to:
   - Develop a goal statement. 
   - Create two types of storyboards: big picture and close-up. 
   - Understand the difference between low-fidelity and high-fidelity design. 
   - Apply the basics of drawing. 
   - Apply the principles of information architecture to organize a mobile app. 
   - Create paper wireframes for a mobile app design. 
   - Develop digital wireframes in the design tool Figma. 
   - Build a paper prototype to add interactivity to designs. 
   - Design a low-fidelity prototype in Figma. 
   - Recognize implicit bias and deceptive patterns in design. 
   - Continue to design a mobile app to include in your professional portfolio. 

To be successful in this course, you should complete the previous two courses in this certificate program, or have an ability to conduct user research to inform the creation of empathy maps, personas, user stories, user journey maps, problem statements, and value propositions. You will also need paper and a pen or pencil.",https://www.coursera.org/learn/wireframes-low-fidelity-prototypes
93,Automate Cybersecurity Tasks with Python,"This is the seventh course in the Google Cybersecurity Certificate. These courses will equip you with the skills you need to apply for an entry-level cybersecurity job. You’ll build on your understanding of the topics that were introduced in the sixth Google Cybersecurity Certificate course. In this course, you will be introduced to the Python programming language and apply it in a cybersecurity setting to automate tasks. You'll start by focusing on foundational Python programming concepts, including data types, variables, conditional statements, and iterative statements. You'll also learn to work with Python effectively by developing functions, using libraries and modules, and making your code readable. In addition, you'll work with string and list data, and learn how to import, parse and debug files.  

Google employees who currently work in cybersecurity will guide you through videos, provide hands-on activities and examples that simulate common cybersecurity tasks, and help you build your skills to prepare for jobs. 

Learners who complete this certificate will be equipped to apply for entry-level cybersecurity roles. No previous experience is necessary.

By the end of this course, you will: 
- Explain how the Python programming language is used in cybersecurity.
- Write conditional and iterative statements in Python.
- Create new, user-defined Python functions.
- Use Python to work with strings and lists.
- Use regular expressions to extract information from text.
- Use Python to open and read the contents of a file.
- Identify best practices to improve code readability.
- Practice debugging code.",https://www.coursera.org/learn/automate-cybersecurity-tasks-with-python
94,Introduction to Front-End Development,"Welcome to Introduction to Front-End Development, the first course in the Meta Front-End Developer program.   This course is a good place to start if you want to become a web developer. You will learn about the day-to-day responsibilities of a web developer and get a general understanding of the core and underlying technologies that power the internet. You will learn how front-end developers create websites and applications that work well and are easy to maintain. 

You’ll be introduced to the core web development technologies like HTML and CSS and get opportunities to practice using them. You will also be introduced to modern UI frameworks such as Bootstrap and React that make it easy to create interactive user experiences. 

By the end of the course, you will be able to: 
- Describe the front-end developer role 
- Explain the core and underlying technologies that power the internet 
- Use HTML to create a simple webpage 
- Use CSS to control the appearance of a simple webpage 
- Explain what React is 
- Describe the applications and characteristics of the most popular UI frameworks 

For the final project in this course, you will create and edit a webpage using HTML and the Bootstrap CSS framework. Using a responsive layout grid, you will construct a responsive webpage containing text and images that looks great on any size screen. 

This is a beginner course intended for learners eager to learn the fundamentals of web development. To succeed in this course, you do not need prior web development experience, only basic internet navigation skills and an eagerness to get started with coding.",https://www.coursera.org/learn/introduction-to-front-end-development
95,Create High-Fidelity Designs and Prototypes in Figma,"Create High-Fidelity Designs and Prototypes in Figma is the fifth course in a certificate program that will equip you with the skills you need to apply to entry-level jobs in user experience (UX) design. In this course, you will follow step-by-step tutorials to learn how to create high-fidelity designs, called mockups, in Figma, a popular design tool. Then, you’ll turn those designs into an interactive prototype that works like a finished product. You’ll conduct research to collect feedback about your designs and make improvements. Finally, you’ll learn how to share your designs with development teams and highlight your work in your professional UX portfolio. Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios. Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers. 

By the end of this course, you will be able to:
   - Build mockups and high-fidelity prototypes in Figma.
   - Define and apply common visual design elements and principles.
   - Demonstrate how design systems can be used to organize, standardize, and enhance designs.
   - Understand the role of design critique sessions and feedback while iterating on designs. 
   - Learn how to hand off finished design projects to engineering teams. 
   - Complete mobile app designs to include in a professional UX portfolio. 

This course is suitable for beginner-level UX designers who have completed the previous four courses of the Google UX Design Certificate. Alternatively, learners who have not completed the previous courses should have a strong understanding of the design process, how to create low-fidelity designs on paper and in Figma, and how to conduct usability studies.",https://www.coursera.org/learn/high-fidelity-designs-prototype
96,"Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning","If you are a software developer who wants to build scalable AI-powered algorithms, you need to understand how to use the tools to build them. This course is part of the upcoming Machine Learning in Tensorflow Specialization and will teach you best practices for using TensorFlow, a popular open-source framework for machine learning.  The Machine Learning course and Deep Learning Specialization from Andrew Ng teach the most important and foundational principles of Machine Learning and Deep Learning. This new deeplearning.ai TensorFlow Specialization teaches you how to use TensorFlow to implement those principles so that you can start building and applying scalable models to real-world problems. To develop a deeper understanding of how neural networks work, we recommend that you take the Deep Learning Specialization.",https://www.coursera.org/learn/introduction-tensorflow
97,Build Dynamic User Interfaces (UI) for Websites,"Build Dynamic User Interfaces (UI) for Websites is the sixth course in a program that will equip you with the skills you need to apply to entry-level jobs in user experience (UX) design. In this course, you will plan a design for a website, create wireframes and prototypes, and test your designs to get feedback. Additionally, you will learn about engaging in design critique sessions and how to give and receive feedback. By the end of this course, you will have a new design project to include in your professional UX portfolio. In addition, you’ll learn how to search for entry-level UX design jobs, create a resume that highlights your skills and accomplishments, and build your professional portfolio website.  Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios. Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers.

By the end of this course, you will be able to:
   - Apply each step of the UX design thinking framework (empathize, define, ideate, prototype, test) to create a responsive website.
   - Plan information architecture and create sitemaps for website designs. 
   - Apply common layouts for web pages. 
   - Plan and conduct a usability study to gather feedback about designs. 
   - Iterate on designs based on research insights. 
   - Work with design systems.
   - Add a new design project to your professional UX portfolio. 
   - [Optional] Create or update a UX-focused resume. 
   - [Optional] Learn how to search for and apply to introductory-level jobs in the field of UX.

This course is suitable for beginner-level UX designers who have completed the previous five courses of the Google UX Design Certificate. Alternatively, learners need to have a strong foundational understanding of the design process; experience creating wireframes, mockups, and prototypes; and the ability to conduct usability studies. No previous experience with Figma is required.",https://www.coursera.org/learn/responsive-web-design-adobe-xd
98,Build a Modern Computer from First Principles: From Nand to Tetris (Project-Centered Course),"What you’ll achieve: In this project-centered course* you will build a modern computer system, from the ground up. We’ll divide this fascinating journey into six hands-on projects that will take you from constructing elementary logic gates all the way through creating a fully functioning general purpose computer. In the process, you will learn - in the most direct and constructive way - how computers work, and how they are designed.

What you’ll need:
This is a self-contained course: all the knowledge necessary to succeed in the course and build the computer system will be given as part of the learning experience. Therefore, we assume no previous computer science or engineering knowledge, and all learners are welcome aboard. You will need no physical materials, since you will build the computer on your own PC, using a software-based hardware simulator, just like real computers are designed by computer engineers in the field. The hardware simulator, as well as other software tools, will be supplied freely after you enroll in the course.

Course format:
The course consists of six modules, each comprising a series of video lectures, and a project. You will need about 2-3 hours to watch each module's lectures, and about 5-10 hours to complete each one of the six projects. The course can be completed in six weeks, but you are welcome to take it at your own pace. You can watch a TED talk about this course by Googling ""nand2tetris TED talk"".

*About Project-Centered Courses: Project-centered courses are designed to help you complete a personally meaningful real-world project, with your instructor and a community of learners with similar goals providing guidance and suggestions along the way. By actively applying new concepts as you learn, you’ll master the course content more efficiently; you’ll also get a head start on using the skills you gain to make positive changes in your life and career. When you complete the course, you’ll have a finished project that you’ll be proud to use and share.",https://www.coursera.org/learn/build-a-computer
99,Probability & Statistics for Machine Learning & Data Science,"Mathematics for Machine Learning and Data science is a foundational online program created by DeepLearning.AI and taught by Luis Serrano. This beginner-friendly program is where you’ll master the fundamental mathematics toolkit of machine learning. After completing this course, learners will be able to:

•  Describe and quantify the uncertainty inherent in predictions made by machine learning models, using the concepts of probability, random variables, and probability distributions.
•  Visually and intuitively understand the properties of commonly used probability distributions in machine learning and data science like Bernoulli, Binomial, and Gaussian distributions
•  Apply common statistical methods like maximum likelihood estimation (MLE) and maximum a priori estimation (MAP) to machine learning problems
•  Assess the performance of machine learning models using interval estimates and margin of errors 
•  Apply concepts of statistical hypothesis testing to commonly used tests in data science like AB testing
•  Perform Exploratory Data Analysis on a dataset to find, validate, and quantify patterns.

Many machine learning engineers and data scientists struggle with mathematics. Challenging interview questions often hold people back from leveling up in their careers, and even experienced practitioners can feel held by a lack of math skills. 

This specialization uses innovative pedagogy in mathematics to help you learn quickly and intuitively, with courses that use easy-to-follow plugins and visualizations to help you see how the math behind machine learning actually works. Upon completion, you’ll understand the mathematics behind all the most common algorithms and data analysis techniques — plus the know-how to incorporate them into your machine learning career.",https://www.coursera.org/learn/machine-learning-probability-and-statistics
100,Design a User Experience for Social Good & Prepare for Jobs,"Design a User Experience for Social Good and Prepare for Jobs is the seventh and final course in a program that will equip you with the skills you need to become an entry-level UX designer. In this course, you will design a dedicated mobile app and a responsive website focused on social good. You will showcase all that you’ve learned during the certificate program to complete the design process from beginning to end: empathizing with users, defining their pain points, coming up with ideas for design solutions, creating wireframes and prototypes, and testing designs to get feedback. By the end of this course, you will have a new cross-platform design project to include in your professional UX portfolio.  This course will also prepare you to land your first job as a UX designer. You’ll learn how to interview for entry-level UX design positions. You’ll get tips from Googlers based on their own interview experiences and their unique perspectives as hiring managers. And, you’ll polish the professional UX portfolio you’ve been building throughout the program so that it’s ready for job applications. 

Current UX designers and researchers at Google will serve as your instructors, and you will complete hands-on activities that simulate real-world UX design scenarios. Learners who complete the seven courses in this certificate program should be equipped to apply for entry-level jobs as UX designers. 

By the end of this course, you will be able to:
   - Apply each step of the UX design process (empathize, define, ideate, prototype, test) to create designs focused on social good.
   - Identify the differences between dedicated mobile apps and responsive web apps.
   - Understand progressive enhancement and graceful degradation approaches for designing across devices. 
   - Build wireframes, mockups, and low-fidelity and high-fidelity prototypes. 
   - Add a new design project to your professional UX portfolio. 
   - Create your portfolio of design work for job applications. 
   - Join and participate in online UX communities.
   - Interview for an entry-level UX design job. 
   - Determine if freelance design work is a good career fit for you.

This course is suitable for beginner-level UX designers who have completed the previous six courses of the Google UX Design Certificate.",https://www.coursera.org/learn/ux-design-jobs
101,Gamification,"Gamification is the application of game elements and digital game design techniques to non-game problems, such as business and social impact challenges. This course will teach you the mechanisms of gamification, why it has such tremendous potential, and how to use it effectively. For additional information on the concepts described in the course, you can purchase Professor Werbach's book For the Win: How Game Thinking Can Revolutionize Your Business in print or ebook format in several languages.",https://www.coursera.org/learn/gamification
102,Version Control,"Learn how modern software developers collaborate across the world without messing up each other's code. You will look at the different version control systems and how to create an effective software development workflow. You will be introduced to some of the most commonly used Linux commands that you can use to work with files on your hard drive and create powerful workflows that will automate your work, saving you time and effort.  Finally, you will see how Git can be used in software development projects to manage team files. And you will create a repository that can manage code revisions.",https://www.coursera.org/learn/introduction-to-version-control
103,Object-Oriented Data Structures in C++,"This course teaches learners how to write a program in the C++ language, including how to set up a development environment for writing and debugging C++ code and how to implement data structures as C++ classes. It is the first course in the Accelerated CS Fundamentals specialization, and subsequent courses in this specialization will be using C++ as the language for implementing the data structures covered in class.",https://www.coursera.org/learn/cs-fundamentals-1
104,Introduction to DevOps,"Get started with your DevOps journey with this beginner-friendly course! DevOps skills are high in demand and expected to be one of the fastest-growing skills in the software industry. This course is designed to be a first step in obtaining those valuable skills.   This self-paced introductory course explores DevOps as a cultural movement. It describes the business case for DevOps, and covers its essentials. This course teaches new ways of thinking, working, organizing, and measuring to fully realize the benefits of DevOps. By applying DevOps practices, you will be able to build better products for your users.  

You will learn how breaking down silos and organizing developers and operators into single cross-functional teams is necessary for truly adopting DevOps. Having everyone contributing and everyone being responsible for success is at the heart of DevOps. You will see how building a culture of shared responsibility and transparency is the foundation of every high-performing DevOps teams. 

You’ll learn how you can use cloud native architecture to build resilience in your products and learn about helpful DevOps tools like horizontal scaling and independently deployable microservices. You will explore how Agile Methodologies like Scrum are crucial to DevOps as well as learn about Continuous Integration and Continuous Delivery (CI/CD), which enables frequent deployments and working as a team to create high-quality code. 

This course concludes with case studies about DevOps-based scenarios, which you will analyze and relate to DevOps concepts learnt throughout this course. 

This course is designed for those new to DevOps as well as those looking to increase their current knowledge of DevOps.",https://www.coursera.org/learn/intro-to-devops
105,Using Python to Access Web Data,"This course will show how one can treat the Internet as a source of data.  We will scrape, parse, and read web data as well as access data using web APIs.  We will work with HTML, XML, and JSON data formats in Python.  This course will cover Chapters 11-13 of the textbook “Python for Everybody”. To succeed in this course, you should be familiar with the material covered in Chapters 1-10 of the textbook and the first two courses in this specialization.  These topics include variables and expressions, conditional execution (loops, branching, and try/except), functions, Python data structures (strings, lists, dictionaries, and tuples), and manipulating files.  This course covers Python 3.",https://www.coursera.org/learn/python-network-data
106,Advanced React,"Learn how to use more advanced React concepts and features, become proficient in JSX, and confidently test your applications. You’ll examine different types of React components and learn various characteristics and when to use them. You’ll dig into more advanced hooks and create your own. You’ll look into building forms with React. You’ll explore component composition and new patterns, such as Higher Order Components and Render Props. You’ll create a web application that consumes API data and get familiar with the most commonly used React framework integrations, tools, and testing techniques.

By the end of this course, you will be able to:
• Render lists and form components efficiently in React.
• Lift shared state up when several components need the updated data.
• Leverage React Context to share global state for a tree of components.
• Fetch data from a remote server.
• Use advanced hooks in React, and put them to use within your application.
• Build your own custom hooks.
• Understand JSX in depth.
• Embrace component composition techniques
• Use advanced patterns to encapsulate common behavior via Higher Order Components and Render Props.
• Test your React components.
• Build a portfolio using React.

You’ll gain experience with the following tools and software: 
• React.js
• JSX
• React
• HTML, CSS, and JavaScript 
• VSCode

You will be able to leverage the potential of this course to develop new skills, improve productivity, act effectively with data and boost your career.

To take this course, you should understand the basics of React, HTML, CSS, and JavaScript. Additionally, it always helps to have a can-do attitude!",https://www.coursera.org/learn/advanced-react
107,Algorithmic Toolbox,"This online course covers basic algorithmic techniques and ideas for computational problems arising frequently in practical applications: sorting and searching, divide and conquer, greedy algorithms, dynamic programming. We will learn a lot of theory: how to sort data and how it helps for searching; how to break a large problem into pieces and solve them recursively; when it makes sense to proceed greedily; how dynamic programming is used in genomic studies. You will practice solving computational problems, designing new algorithms, and implementing solutions efficiently (so that they run in less than a second).",https://www.coursera.org/learn/algorithmic-toolbox
108,HTML and CSS in depth,"In this course, you’ll use software development tools like HTML to build attractive web pages that work well—and you’ll use structured semantic data to control how websites appear to the end user.  You will then dive deeper into CSS by applying increasingly specific styling to various elements. You’ll learn to use Bootstrap’s grid system to create layouts and work with components and themes. Finally, you’ll explore debugging and learn how it can be utilized to banish common front-end errors.

By the end of this course you will be able to:

• Create a simple form with a responsive layout using HTML5 and CSS
• Create a responsive layout using CSS 
• Create a UI using Bootstrap
• Implement debugging tools

This is a beginner course for learners who would like to prepare themselves for a career in front-end development. To succeed in this course, you do not need prior development experience, only basic internet navigation skills and an eagerness to get started with coding.",https://www.coursera.org/learn/html-and-css-in-depth
109,Developing AI Applications with Python and Flask,"This mini course is intended to apply basic Python skills for developing Artificial Intelligence (AI) enabled applications. In this hands-on project you will assume the role of a developer and perform tasks including:   - Develop functions and application logic 
- Exchange data using Watson AI libraries
- Write unit tests, and 
- Package the application for distribution. 

You will demonstrate your foundational Python skills by employing different techniques to develop web applications and AI powered solutions. After completing this course, you will have added another project to your portfolio and gained the confidence to begin developing AI enabled applications using Python and Flask, Watson AI libraries, build and run unit tests, and package the application for distribution out in the real world.",https://www.coursera.org/learn/python-project-for-ai-application-development
110,Django Web Framework ,"It's time to build something bigger. In this course, you will use the Django web framework to build, secure and administer a web server. You will have the opportunity to create, design and configure a web app using the Django framework in-line with best practices.  Explore the usage of models in Django and their relationship to databases. Use views to render requested data to meaningful template structures for a composed user interface (UI). Implement proactive security practices and mitigate common security risks.

By the end of the course you will be able to:

• Design a Django web application using Python, HTML and CSS.
• Describe and implement the HTTP request response cycle by creting views, routes and templates.
• Describe and build a data model to create database tabless and dynamic web forms.
• Explore the Django Template Language to create dyanamic webpages that display data stored in a database.
• Create, share and test your web application by using industry standard best practice and guidelines.  

To succeed in this course, you are required to have a fundamental knowledge of the following:
HTML and CSS
Python
MySQL

You also require basic internet navigation skills and an eagerness to get started with coding in Django!",https://www.coursera.org/learn/django-web-framework
111,Building Scalable Java Microservices with Spring Boot and Spring Cloud,"""¨Microservices"""" describes a software design pattern in which an application is a collection of loosely coupled services. These services are fine-grained, and can be individually maintained and scaled. The microservices architecture is ideal for the public cloud, with its focus on elastic scaling with on-demand resources. In this course, you will learn how to build Java applications using Spring Boot and Spring Cloud on Google Cloud.  You'll use Spring Cloud Config to manage your application's configuration. You'll send and receive messages with Pub/Sub and Spring Integration. You'll also use Cloud SQL as a managed relational database for your Java applications, and learn how to migrate to Cloud Spanner, which is Google Cloud's globally-distributed strongly consistent database service. You'll also learn about tracing and debugging your Spring applications with Google Cloud's operations suite.

To succeed in this course, you should be familiar with the Java programming language and building Java applications with tools such as Maven or Gradle. You should also have general knowledge of Google Cloud.""

>>> By enrolling in this course you agree to the Qwiklabs Terms of Service as set out in the FAQ and located at: https://qwiklabs.com/terms_of_service <<<",https://www.coursera.org/learn/google-cloud-java-spring
112,Kotlin for Java Developers,"The Kotlin programming language is a modern language that gives you more power for your everyday tasks. Kotlin is concise, safe, pragmatic, and focused on interoperability with Java code. It can be used almost everywhere Java is used today: for server-side development, Android apps, and much more. Kotlin is 100% compatible with all existing Java frameworks, and has good tooling support. It’s a pragmatic language with a very low learning curve, and can be quickly grasped by Java developers. Kotlin code might be compiled not only to JVM bytecode but to JavaScript and Native code as well, but this course is focused on Kotlin/JVM. This course aims to share with you the power and the beauty of Kotlin. We'll have a basic overview of the language, as well as a discussion of many corner cases, especially concerning Java interoperability. The course is based on your Java experience; it shows the similarities between the two languages and focuses on what's going to be different. 
Note that this course won't cover the programming fundamentals. We'll discuss: basic syntax, nullability, functional programming with Kotlin, object-oriented programming with Kotlin, the power of the Kotlin standard library, and Java interoperability.",https://www.coursera.org/learn/kotlin-for-java-developers
113,Developing Front-End Apps with React,"React is one of the most popular frameworks  in the Web and Front-end application Development category.    In this course, you will    
- build rich Front-End applications with React and ES6   
- connect React components using data and state   
- write rich React components with advanced features like Hooks and Redux   

In addition, you will explore how to access the React web framework user interface (UI) library and run rich React applications. You will find ways to use React components and change their properties and states in a dynamic user interface. You will learn to connect to an external server from a React page. The course introduces different testing tools that you can use to test the component without manual verification.  

Throughout the course, you will complete numerous hands-on labs to gain practical experience. At the end of the course, you will demonstrate your React skills with a final project to add to your portfolio.    

This course will help you succeed as a front-end or full-stack developer. It suits those in IT looking to step up in their careers or new graduates seeking to establish their client-side skills.  

Note: This course requires knowledge of HTML, CSS, JavaScript, and Git/GitHub",https://www.coursera.org/learn/developing-frontend-apps-with-react
114,Introduction to Self-Driving Cars,"Welcome to Introduction to Self-Driving Cars, the first course in University of Toronto’s Self-Driving Cars Specialization.  This course will introduce you to the terminology, design considerations and safety assessment of self-driving cars.  By the end of this course, you will be able to: 
- Understand commonly used hardware used for self-driving cars
- Identify the main components of the self-driving software stack
- Program vehicle modelling and control  
- Analyze the safety frameworks and current industry practices for vehicle development

For the final project in this course, you will develop control code to navigate a self-driving car around a racetrack in the CARLA simulation environment. You will construct longitudinal and lateral dynamic models for a vehicle and create controllers that regulate speed and path tracking performance using Python. You’ll test the limits of your control design and learn the challenges inherent in driving at the limit of vehicle performance.

This is an advanced course, intended for learners with a background in mechanical engineering, computer and electrical engineering, or robotics. To succeed in this course, you should have programming experience in Python 3.0, familiarity with Linear Algebra (matrices, vectors, matrix multiplication, rank, Eigenvalues and vectors and inverses), Statistics (Gaussian probability distributions), Calculus and Physics (forces, moments, inertia, Newton's Laws).

You will also need certain hardware and software specifications in order to effectively run the CARLA simulator: Windows 7 64-bit (or later) or Ubuntu 16.04 (or later), Quad-core Intel or AMD processor (2.5 GHz or faster), NVIDIA GeForce 470 GTX or AMD Radeon 6870 HD series card or higher, 8 GB RAM, and OpenGL 3 or greater (for Linux computers).",https://www.coursera.org/learn/intro-self-driving-cars
115,Agile Meets Design Thinking,"Despite everyone's good intentions, hard work and solid ideas, too many teams end up creating products that no one wants, no one can use, and no one buys. But it doesn't have to be this way. Agile and design thinking offer a different--and effective--approach to product development, one that results in valuable solutions to meaningful problems. In this course, you’ll learn how to determine what's valuable to a user early in the process--to frontload value--by focusing your team on testable narratives about the user and creating a strong shared perspective.  This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.",https://www.coursera.org/learn/uva-darden-getting-started-agile
116,Using Databases with Python,"This course will introduce students to the basics of the Structured Query Language (SQL) as well as basic database design for storing data as part of a multi-step data gathering, analysis, and processing effort.  The course will use SQLite3 as its database.  We will also build web crawlers and multi-step data gathering and visualization processes.  We will use the D3.js library to do basic data visualization.  This course will cover Chapters 14-15 of the book “Python for Everybody”. To succeed in this course, you should be familiar with the material covered in Chapters 1-13 of the textbook and the first three courses in this specialization. This course covers Python 3.",https://www.coursera.org/learn/python-databases
117,Data Structures,"A good algorithm usually comes together with a set of good data structures that allow the algorithm to manipulate the data efficiently. In this online course, we consider the common data structures that are used in various computational problems. You will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments. This will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it. You will also learn typical use cases for these data structures. A few examples of questions that we are going to cover in this class are the following:
1. What is a good strategy of resizing a dynamic array?
2. How priority queues are implemented in C++, Java, and Python?
3. How to implement a hash table so that the amortized running time of all operations is O(1) on average?
4. What are good strategies to keep a binary tree balanced? 

You will also learn how services like Dropbox manage to upload some large files instantly and to save a lot of storage space!",https://www.coursera.org/learn/data-structures
118,Introduction to Scrum Master Training,"This course is designed to help Scrum beginners learn the foundational knowledge to become proficient with Agile Scrum. Throughout the course, learners will explore Agile methodologies and benefits of building incrementally. They will also learn about the roles within Scrum teams, events that happen during a Sprint, Agile artifacts, and the Definition of Done for a Sprint.",https://www.coursera.org/learn/introduction-to-certified-scrum-master
119,Version Control with Git,"The Version Control with Git course provides  you with a solid, hands-on foundation for understanding the Git version control system.  Git is open source software originally created by Linus Torvalds. Git manages team files for large and small projects. This allows the team to continuously improve its product. It is used by most major technology companies, and is assumed knowledge for many modern programming and IT jobs.  It is a core component of DevOps, continuous delivery pipelines and cloud-native computing. You could also use Git to manage the many continuously improving revisions of that book that you are writing.  In this course, you will not learn everything there is to know about Git, but you will build a strong conceptual understanding of the technology, and afterward will be able to confidently dig deeper on any topic that interests you. This course assumes no previous knowledge of Git, but if you do have experience with it, you may find this course to be both useful and challenging. This is especially true if you currently ""know just enough Git to be dangerous"". 

There are two paths in this course. Both rely heavily on hands-on labs. One path assumes that you have experience using a command line interface, and the other path uses the Sourcetree graphical client. If you are not experienced with a command line, we highly suggest that you go through the Sourcetree path. Eventually, you might want to go through both paths, so that you can decide which tool to use for specific tasks. Besides, repetition is good for learning :)

You can watch the videos and take the quizzes from your phone if you want, but the hands-on labs require you to have a Windows or Mac computer. If you use the command line path through the course, you can also use Linux. 

This course uses Bitbucket (bitbucket.org) as the hosted provider for remote Git repositories. Bitbucket is free for teams of up to 5 people, including private repositories. However, most of the knowledge that you gain in this course applies to Git itself, and you can apply this knowledge to other hosted Git providers (such as GitHub). 

This course tries to be as concise as possible. It will probably take you about 5-10 hours to go through one of the two paths, but your mileage may vary.",https://www.coursera.org/learn/version-control-with-git
120,Ordered Data Structures,"In this course, you will learn new data structures for efficiently storing and retrieving data that is structured in an ordered sequence. Such data includes an alphabetical list of names, a family tree, a calendar of events or an inventory organized by part numbers. The specific data structures covered by this course include arrays, linked lists, queues, stacks, trees, binary trees, AVL trees, B-trees and heaps. This course also shows, through algorithm complexity analysis, how these structures enable the fastest algorithms to search and sort data.",https://www.coursera.org/learn/cs-fundamentals-2
121,Introduction to Cybersecurity Careers,"There is a great demand for cybersecurity professionals and expected to continue into the foreseeable future. Thus making it the right time to launch into a cybersecurity career.  This course gives an insight into the various career options in cybersecurity. It is designed to give you the knowledge required to find and secure the right career for you in the information security (Infosec) industry. The course begins by addressing the widening employment gap in cybersecurity, detailing the various roles and responsibilities associated with different career levels. 

You will learn the importance of both technical and soft skills, providing a balanced approach to professional development. In addition, you will also become familiar with the most recognized certifications in the field provided by organizations such as CompTIA, ISC2 like A+ and CISSP and so on. 

Throughout this course you will hear from several cybersecurity experts sharing their insights and experiences on how to start a career in cybersecurity.

This course is suitable for anyone who aspires to launch a rewarding career in cybersecurity.  It does not require any prior degree or cybersecurity background.",https://www.coursera.org/learn/introduction-to-cybersecurity-careers
122,Introduction to Generative AI Studio,"This course introduces Vertex AI Studio, a tool for prototyping and customizing generative AI models. Through immersive lessons, engaging demos, and a hands-on lab, you'll explore the generative AI workflow and learn how to leverage Vertex AI Studio for Gemini multimodal applications, prompt design, and model tuning. The aim is to enable you to unlock the potentials of these models in your projects with Vertex AI Studio.",https://www.coursera.org/learn/introduction-to-generative-ai-studio
123,C for Everyone: Programming Fundamentals,"This course is for everyone. In the new world we live in, coding is a universally valuable skill, whether you're a scientist, artist, or a humanist. Algorithms are everywhere, and we all have to understand how they work. The C language is particularly well suited as an introduction to coding: It's a tried-and-true language, and it allows you to understand computing processes at a deep level.  No prior knowledge of coding is needed for this course. We'll start at the beginning.
The time estimated time commitment for this course is five hours a week for five weeks.",https://www.coursera.org/learn/c-for-everyone
124,Introduction to Google Workspace Administration,"Introduction to Google Workspace Administration is the first course in the Google Workspace Administration series of courses. This series will serve as the starting place for any new Google Workspace admin as they begin their journey of managing and establishing Google Workspace best practices for their organization. These courses together will leave you feeling confident to utilize the basic functions of the admin console to manage users, control access to services, configure security settings, and much more.

Through a series of readings and step-by-step hands-on exercises, and knowledge checks, learners can expect to leave this training with all of the skills they need to get started as Google Workspace administrators.

In this course you will sign up for a Google Workspace account and configure your DNS records for Google Workspace. You will learn how to provision and manage your users, and will create groups and calendar resources for your organization. You will be introduced to your Cloud Directory and will learn how to split your organization into organizational units to simplify user and service management. Finally you will learn how to delegate admin privileges to other users in your organization.

IMPORTANT - To get the most out of this training course, learners should be prepared to:

- Purchase a new domain through a registrar such as enom or GoDaddy. Note: If you already have a domain that you would like to use for the trial you can do this but this course does not provide detailed steps on how to associate an existing domain with a Google Workspace trial account. For detailed instructions on how to do that, please refer to this Help Center article: https://support.google.com/a/topic/9196
- Provide credit card details as part of the Google Workspace account setup. You will be using a 14 day trial Google Workspace account during this course. As part of the sign up flow you will be required to provide credit card details. No charges for Google Workspace are made to your credit card until the trial period has ended. You must ensure that you CANCEL YOUR SUBSCRIPTION before the trial period ends to avoid and charges. This is very IMPORTANT so don't forget!
- Install and be ready to use the latest version of Chrome web browser available at https://www.google.com/chrome/",https://www.coursera.org/learn/introduction-google-workspace
125,Java Programming: Solving Problems with Software,"Learn to code in Java and improve your programming and problem-solving skills. You will learn to design algorithms as well as develop and debug programs. Using custom open-source classes, you will write programs that access and transform images, websites, and other types of data. At the end of the course you will build a program that determines the popularity of different baby names in the US over time by analyzing comma separated value (CSV) files.  After completing this course you will be able to:
1. Edit, compile, and run a Java program;
2. Use conditionals and loops in a Java program;
3. Use Java API documentation in writing programs. 
4. Debug a Java program using the scientific method;
5. Write a Java method to solve a specific problem;
6. Develop a set of test cases as part of developing a program;
7. Create a class with multiple methods that work together to solve a problem; and
8. Use divide-and-conquer design techniques for a program that uses multiple methods.",https://www.coursera.org/learn/java-programming
126,Linux System Programming and Introduction to Buildroot,"This course provides an overview of System Programming for the Linux operating system, or software which is interfacing directly with the Linux Kernel and C library. The basic components of a Linux Embedded System, including kernel and root filesystem details are discussed. The Buildroot build system is introduced, which students use to build their own custom Embedded Linux system through programming assignments. Linux System Programming and Introduction to Buildroot can also be taken for academic credit as ECEA 5305, part of CU Boulder’s Master of Science in Electrical Engineering.",https://www.coursera.org/learn/linux-system-programming-introduction-to-buildroot
127,"Excel/VBA for Creative Problem Solving, Part 1","""Excel/VBA for Creative Problem Solving, Part 1"" is aimed at learners who are seeking to augment, expand, optimize, and increase the efficiency of their Excel spreadsheet skills by tapping into the powerful programming, automation, and customization capabilities available with Visual Basic for Applications (VBA).   This course is the first part of a three-part series and Specialization that focuses on the application of computing techniques in Excel/VBA to solve problems.  In this course (Part 1), you will: 1) create macros to automate procedures in Excel; 2) define your own user-defined functions; 3) create basic subroutines to interface with the user; 4) learn the basic programming structures in VBA; and 5) automate Excel’s Goal Seek and Solver tools and use numerical techniques to create “live solutions” to solve targeting and optimization problems.

New to computer programming?  The extremely intuitive and visual nature of VBA lends itself nicely to teaching and learning - what a fun way to learn to code!  No prior knowledge in programming nor advanced math skills are necessary yet seasoned programmers will pick up new and creative spreadsheet problem solving strategies.

After you have learned the basics of VBA, each module will introduce foundational and broad problems inspired by situations that you might encounter in the real world.  To pass each module, you'll need to pass a mastery quiz and complete a problem solving assignment.  This course is unique in that the weekly assignments are completed in-application (i.e., on your own computer in Excel), providing you with valuable hands-on training.",https://www.coursera.org/learn/excel-vba-for-creative-problem-solving-part-1
128,Llama for Python Programmers,"Llama for Python Programmers is designed for programmers who want to leverage the Llama 2 large language model (LLM) and take advantage of the generative artificial intelligence (AI) revolution. In this course, you’ll learn how open-source LLMs can run on self-hosted hardware, made possible through techniques such as quantization by using the llama.cpp package. You’ll explore how Meta’s Llama 2 fits into the larger AI ecosystem, and how you can use it to develop Python-based LLM applications. Get hands-on skills using methods such as few-shot prompting and grammars to improve and constrain Llama 2 output, allowing you to get more robust data interchanges between Python application code and LLM inference. Lastly, gain insight into the different Llama 2 model variants, how they were trained, and how to interact with these models in Python. This course does not require a data science or statistics background. It is developed specifically for Python application developers who are interested in integrating generative AI, such as Llama 2, into their work.",https://www.coursera.org/learn/llama-for-python-programmers
129,Machine Learning for All,"Machine Learning, often called Artificial Intelligence or AI, is one of the most exciting areas of technology at the moment. We see daily news stories that herald new breakthroughs in facial recognition technology, self driving cars or computers that can have a conversation just like a real person. Machine Learning technology is set to revolutionise almost any area of human life and work, and so will affect all our lives, and so you are likely to want to find out more about it. Machine Learning has a reputation for being one of the most complex areas of computer science, requiring advanced mathematics and engineering skills to understand it. While it is true that working as a Machine Learning engineer does involve a lot of mathematics and programming, we believe that anyone can understand the basic concepts of Machine Learning, and given the importance of this technology, everyone should. The big AI breakthroughs sound like science fiction, but they come down to a simple idea: the use of data to train statistical algorithms. In this course you will learn to understand the basic idea of machine learning, even if you don't have any background in math or programming. Not only that, you will get hands on and use user friendly tools developed at Goldsmiths, University of London to actually do a machine learning project: training a computer to recognise images. This course is for a lot of different people. It could be a good first step into a technical career in Machine Learning, after all it is always better to start with the high level concepts before the technical details, but it is also great if your role is non-technical. You might be a manager or other non-technical role in a company that is considering using Machine Learning. You really need to understand this technology, and this course is a great place to get that understanding. Or you might just be following the news reports about AI and interested in finding out more about the hottest new technology of the moment. Whoever you are, we are looking forward to guiding you through you first machine learning project. NB this course is designed to introduce you to Machine Learning without needing any programming. That means that we don't cover the programming based machine learning tools like python and TensorFlow.",https://www.coursera.org/learn/uol-machine-learning-for-all
130,Front-End Developer Capstone ,"The Capstone project enables you to demonstrate multiple skills from the Certificate by solving an authentic real-world problem. Each module includes a brief recap of, and links to, content that you have covered in previous courses in this program.  This course will test your knowledge and understanding, and provide you with a platform to show off your new abilities in front-end web development using React. During this course, you will be guided through the process of building an app, combining all the skills and technologies you've learned throughout this program to solve the problem at hand. 

On completion of the Capstone project, you’ll have a job-ready portfolio that you can show to recruiters, demonstrate during interviews and impress potential employers.

To complete this course, you will need front-end developer experience.  Additionally, it always helps to have a can-do attitude!",https://www.coursera.org/learn/meta-front-end-developer-capstone
131,Introduction to Web Development,"This course is designed to build your skills in web development and design, no matter how little experience or technical knowledge you currently have. You probably visit several websites every day, whether for business, entertainment or education. But have you ever wondered how these websites actually work? How are they built? How do browsers, computers, and mobile devices interact with the web? What skills are necessary to build a website? With a billion websites now on the internet, the answers to these questions could be your first step toward a better understanding of the internet and developing a new set of internet skills.   By the end of this course you’ll be able to describe the structure and functionality of the world wide web, create static web pages using HTML and CSS, select an appropriate web hosting service, and publish your webpages for the world to see. Finally, you’ll be able to develop a working model for creating your own personal or business websites in the future and launch yourself on a learning journey in web development.",https://www.coursera.org/learn/web-development
132,Blockchain: Foundations and Use Cases,"This course is the definitive introduction to blockchain for both the developer and non-developer audience. Beyond the technology, this course will introduce you to some of the philosophy behind decentralization and why there is so much excitement around it. Join ConsenSys Academy and course instructor Nick Nelson in this rich-media introduction to the foundations of blockchain. During the first three modules, you'll be introduced to blockchain and the technology behind it. In module four, we'll go beyond bitcoin and delve deeper into a next-generation blockchain called Ethereum to introduce you to what modern blockchains can do. The use cases featured in the final module are drawn from among the businesses in ConsenSys portfolio. We believe we're uniquely positioned to present you with a valuable behind-the-scenes look at the people and companies working in this space to help give you a better understanding of the business side of blockchain.

Together, we'll examine businesses use cases, hear from industry leaders, and give you the opportunity to develop and analyze a use case yourself. With this course, not only will you be the one who is able to explain blockchain to your colleagues, you'll be well on your way to making educated business decisions with your new, foundational understanding of the technology.",https://www.coursera.org/learn/blockchain-foundations-and-use-cases
133,Web3 and Blockchain Fundamentals,"There is a lot of hype around Web3 and blockchain. As with any disruptive technology, there are many competing sources of information. But if we look beyond the hype and mania—not to mention the fear, uncertainty, and doubt—we see something profound happening. We are witnessing one of the largest transformations of wealth in human history—from paper-based analog assets to digital ones. Blockchain represents the first native digital medium for value, and is foundational to the next generation of the Internet—also known as Web3. In this short course you’ll learn what Web3 is, and how it differs from Web1 and Web2 in important ways. You’ll explore blockchain as the foundational technology for the Web3 era, and will learn about key concepts, such as digital assets (tokens), smart contracts, decentralized autonomous organizations (DAOs), and the blockchain “trilemma.” You will be able to describe seven principles for the design of blockchain-based systems, and seven challenge areas associated with implementing blockchain technology. You will be able to identify the questions one must consider when deciding whether or not blockchain is appropriate for a particular problem or use-case, and you will be able to describe some real-world examples of companies that have integrated blockchain into their business models. 

This course is non-technical (i.e. no coding required) and is intended for a broad audience. The video material for these courses includes content from our “Blockchain Revolution Specialization” and “Web3 and Blockchain in Global Commerce Specialization,” which has been remixed and re-edited for the purposes of this short course.",https://www.coursera.org/learn/web3-blockchain-fundamentals
134,"Introduction to HTML, CSS, & JavaScript","Want to take the first steps to become a Web Developer? This course will help you discover the languages, frameworks, and tools that you will need to create interactive and engaging websites right from the beginning.   You will begin by learning about the roles of front-end, back-end, and full-stack developers and how they work together on development projects. Through this, you will also become familiar with the terminology and skills needed in your career as a web developer.  

Next, you will explore the languages needed for developing websites or applications. You will gain a thorough understanding of HTML and CSS and learn how a combination of both technologies can help developers create the structure and style of their websites.  

Finally, you will learn how JavaScript can make your webpages dynamic with features that include interactive forms, dynamic content modification, and sophisticated menu systems. 

By learning the fundamentals of HTML5, CSS, and JavaScript you will be able to combine them to:  
- create the basic structure of a website  
- create format and layout for web applications 
- enhance your website and create rich, interactive applications 
- increase user interactivity and enhance user experience 
- give your website a real wow factor! 

In this course you will practice what you learn with numerous hands-on labs. Lastly, you will complete a final project where you will create a webpage to showcase your skills and have a great addition to your portfolio!",https://www.coursera.org/learn/introduction-html-css-javascript
135,Introduction to Software Testing,"After completing this course, you will have an understanding of the fundamental principles and processes of software testing. You will have actively created test cases and run them using an automated testing tool. You will being writing and recognizing good test cases, including input data and expected outcomes. After completing this course, you will be able to…
- Describe the difference between verification and validation.
- Explain the goal of testing.
- Use appropriate test terminology in communication; specifically: test fixture, logical test case, concrete test case, test script, test oracle, and fault.
- Describe the motivations for white and black box testing.
- Compare and contrast test-first and test-last development techniques.
- Measure test adequacy using statement and branch coverage.
- Reason about the causes and acceptability of and poor coverage
- Assess the fault-finding effectiveness of a functional test suite using mutation testing.
- Critique black-box and white-box testing, describing the benefits and use of each within the greater development effort.
- Distinguish among the expected-value (true), heuristic, consistency (as used in A/B regression), and probability test oracles and select the one best-suited to the testing objective.
- Craft unit and integration test cases to detect defects within code and automate these tests using JUnit.  To achieve this, students will employ test doubles to support their tests, including stubs (for state verification) and mocks (for behavioral verification) (https://martinfowler.com/articles/mocksArentStubs.html).

This course is primarily aimed at those learners interested in any of the following roles: Software Engineer, Software Engineer in Test, Test Automation Engineer, DevOps Engineer, Software Developer, Programmer, Computer Enthusiast. We expect that you should have an understanding of the Java programming language (or any similar object-oriented language and the ability to pick up Java syntax quickly) and some knowledge of the Software Development Lifecycle.",https://www.coursera.org/learn/introduction-software-testing
136,"Everyday Excel, Part 1","""Everyday Excel, Part 1"" is aimed at learners who are seeking to learn Excel from the ground up.  No experience with Excel is necessary.  While this course is meant for beginners of Excel, advanced users will undoubtedly pick up new skills and tools. This course is the first part of a three-part series and Specialization that focuses on teaching introductory through very advanced techniques and tools in Excel.  In this course (Part 1), you will: 1) learn how to effectively navigate around the Excel environment; 2) edit and format Excel worksheets; 3) implement basic to advanced Excel functions (including financial, logical, and text functions); 4) learn how to manage data sets (filter, remove duplicates, consolidate data, sort data, and validate data); and 5) learn how to effectively visualize data through scatterplots, column charts, and pie charts.

New to Excel?  That is entirely fine!  This course is meant to be fun, thought-provoking, and appeal to a wide audience.  No prior knowledge in programming nor advanced math skills are necessary.  The course is organized into 5 Weeks (modules). 

To pass each module, you'll need to pass a mastery quiz and complete a problem solving assignment.  This course is unique in that the weekly assignments are completed in-application (i.e., on your own computer in Excel), providing you with valuable hands-on training.",https://www.coursera.org/learn/everyday-excel-part-1
137,Fundamentals of Generative AI for Beginners,"Generative AI is a disruptive technology and its impact has been immense. It is causing businesses to rethink customer strategies and redesign their products, chipmakers are scrambling to keep up with the increased demand for processors, and in academia, educators are altering learning paths and curriculums in every field of study. The material presented in this course will introduce you to the world of generative AI and uncover some of the ingredients that make up this groundbreaking field. Using basic terms and a few simple examples, we will explain what generative AI is, what makes it work, and help build a foundation of knowledge that takes you to the next step on your learning journey. Throughout the course, you'll learn what large language models, neural networks, training data sets, and prompts are. You'll also become familiar with some tools and processes used to build generative AI applications. This course is designed for students, early career professionals, and non-Machine Learning practitioners eager to learn more about Generative AI. The material is ""code free"" and builds a foundation of knowledge that can be applied towards advanced learning in the areas of Generative AI and machine learning.",https://www.coursera.org/learn/aws-generative-ai-for-beginners
138,State Estimation and Localization for Self-Driving Cars,"Welcome to State Estimation and Localization for Self-Driving Cars, the second course in University of Toronto’s Self-Driving Cars Specialization. We recommend you take the first course in the Specialization prior to taking this course.  This course will introduce you to the different sensors and how we can use them for state estimation and localization in a self-driving car. By the end of this course, you will be able to:
- Understand the key methods for parameter and state estimation used for autonomous driving, such as the method of least-squares
- Develop a model for typical vehicle localization sensors, including GPS and IMUs
- Apply extended and unscented Kalman Filters to a vehicle state estimation problem
- Understand LIDAR scan matching and the Iterative Closest Point algorithm 
- Apply these tools to fuse multiple sensor streams into a single state estimate for a self-driving car 

For the final project in this course, you will implement the Error-State Extended Kalman Filter (ES-EKF) to localize a vehicle using data from the CARLA simulator. 

This is an advanced course, intended for learners with a background in mechanical engineering, computer and electrical engineering, or robotics. To succeed in this course, you should have programming experience in Python 3.0, familiarity with Linear Algebra (matrices, vectors, matrix multiplication, rank, Eigenvalues and vectors and inverses), Statistics (Gaussian probability distributions), Calculus and Physics (forces, moments, inertia, Newton's Laws).",https://www.coursera.org/learn/state-estimation-localization-self-driving-cars
139,Fundamentals of Software Architecture for Big Data,"The course is intended for individuals looking to understand the basics of software engineering as they relate to building large software systems that leverage big data. You will be introduced to software engineering concepts necessary to build and scale large, data intensive, distributed systems. Starting with software engineering best practices and loosely coupled, highly cohesive data microservices, the course takes you through the evolution of a distributed system over time. This course can be taken for academic credit as part of CU Boulder’s MS in Data Science or MS in Computer Science degrees offered on the Coursera platform. These fully accredited graduate degrees offer targeted courses, short 8-week sessions, and pay-as-you-go tuition. Admission is based on performance in three preliminary courses, not academic history. CU degrees on Coursera are ideal for recent graduates or working professionals. Learn more: 

MS in Data Science: https://www.coursera.org/degrees/master-of-science-data-science-boulder 

MS in Computer Science: https://coursera.org/degrees/ms-computer-science-boulder",https://www.coursera.org/learn/software-architecture-for-big-data-fundamentals
140,Introduction to Software Product Management,"This course highlights the importance and role of software product management. It also provides an overview of the specialization, as well as its goals, structure, and expectations. The course explains the value of process, requirements, planning, and monitoring in producing better software.",https://www.coursera.org/learn/introduction-to-software-product-management
141,Managing Google Workspace,"Managing Google Workspace is the second course in the Google Workspace Administration series. This course focuses on the Google Workspace core services such as Gmail, Calendar, and Drive & Docs. You will become familiar with the various service settings, and learn how to enable them for all or just a subset of your users. You will gain an understanding of Google Vault, Google’s ediscovery service. You will understand the various admin console reports that are available and be able to search and filter the information in these reports. Finally you will see how multiple domains can be used with Google Workspace and learn how to add a new domain to your account.",https://www.coursera.org/learn/managing-google-workspace
142,Single Page Web Applications with AngularJS,"Do you want to write powerful, maintainable, and testable front end applications faster and with less code? Then consider joining this course to gain skills in one of the most popular Single Page Application (SPA) frameworks today, AngularJS. Developed and backed by Google, AngularJS is a very marketable skill to acquire. In this course, we will explore the core design of AngularJS 1.x (latest version of AngularJS 1), its components and code organization techniques. We will enhance the functionality of our web app by utilizing dependency injection to reuse existing services as well as write our own. We will create reusable HTML components that take advantage of AngularJS data binding as well as extend HTML syntax with a very powerful feature of AngularJS called directives. We’ll set up routing so our SPA can have multiple views. We will also learn how to unit test our functionality. At the end of this course, you will build a fully functional, well organized and tested web application using AngularJS and deploy it to the cloud.",https://www.coursera.org/learn/single-page-web-apps-with-angularjs
143,Object Oriented Programming in Java,"Welcome to our course on Object Oriented Programming in Java using data visualization. People come to this course with many different goals -- and we are really excited to work with all of you! Some of you want to be professional software developers, others want to improve your programming skills to implement that cool personal project that you’ve been thinking about, while others of you might not yet know why you’re here and are trying to figure out what this course is all about. This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science.  Our goal is that by the end of this course each and every one of you feels empowered to create a Java program that’s more advanced than any you have created in the past and that is personally interesting to you. In achieving this goal you will also learn the fundamentals of Object Oriented Programming, how to leverage the power of existing libraries, how to build graphical user interfaces, and how to use some core algorithms for searching and sorting data. And this course is project-based, so we’ll dive right into the project immediately!

We are excited to be offering a unique course structure, designed to support learners of different backgrounds in succeeding at their own pace. The first module explains how this will work and if this course is right for you. We also recommend taking a few minutes to explore the course site. A good place to start is the navigation bar on the left. Click Course Content to see what material we’ll cover each week, as well preview the assignments you’ll need to complete to pass the course. Click Discussions to see forums where you can discuss the course material with fellow students taking the class. Be sure to introduce yourself to everyone in the Meet and Greet forum.

This course should take about 6 weeks to complete. You can check out the recommended course schedule below to see a quick overview of the lessons and assignments you’ll complete each week.

We’re excited you’re here learning with us. Let’s get started!",https://www.coursera.org/learn/object-oriented-java
144,Introduction to Structured Query Language (SQL),"In this course, you'll walk through installation steps for installing a text editor, installing MAMP or XAMPP (or equivalent) and creating a MySql Database. You'll learn about single table queries and the basic syntax of the SQL language, as well as database design with multiple tables, foreign keys, and the JOIN operation. Lastly, you'll learn to model many-to-many relationships like those needed to represent users, roles, and courses.",https://www.coursera.org/learn/intro-sql
145,The Full Stack,"As you prepare for your role in back-end development, practice bringing together multiple skills to build a full-stack Django app. You’ll start by setting up an environment for a local practical project, and refactoring the front and back-ends of an existing application. You will then have the opportunity to create the front and back-ends of a new application using your full-stack developer skills. By the end of this course you will be able to:
- Explain common concepts related to full stack development
- Use HTML, CSS and JavaScript to develop well-structured, interactive and responsive websites
- Build a full stack application using Django that stores its data in models on a MySQL database and updates its pages with forms and API endpoints
- Describe the different environments that web applications are deployed to

To complete this course you will need previous experience with back-end development, Python, version control, databases, Django web framework and APIs.",https://www.coursera.org/learn/the-full-stack
146,Product Analytics and AI,"Few capabilities focus agile like a strong analytics program. Such a program determines where a team should focus from one agile iteration (sprint) to the next. Successful analytics are rarely hard to understand and are often startling in their clarity. In this course, developed at the Darden School of Business at the University of Virginia, you'll learn how to build a strong analytics infrastructure for your team, integrating it with the core of your drive to value.",https://www.coursera.org/learn/uva-darden-agile-analytics
147,Unordered Data Structures,"The Unordered Data Structures course covers the data structures and algorithms needed to implement hash tables, disjoint sets and graphs. These fundamental data structures are useful for unordered data. For example, a hash table provides immediate access to data indexed by an arbitrary key value, that could be a number (such as a memory address for cached memory), a URL (such as for a web cache) or a dictionary. Graphs are used to represent relationships between items, and this course covers several different data structures for representing graphs and several different algorithms for traversing graphs, including finding the shortest route from one node to another node. These graph algorithms will also depend on another concept called disjoint sets, so this course will also cover its data structure and associated algorithms.",https://www.coursera.org/learn/cs-fundamentals-3
148,Introduction to AutoSAR,"This course covers every aspect of automotive software development, including the principles of AutoSAR, more complex AutoSAR ideas, non-AutoSAR use cases, and in-depth ECU abstraction development. You will examine the foundational software of AutoSAR, comprehend the subtleties of runnable, and develop knowledge of interfaces, connectors, and composition. Additionally, you will learn about real-time environments (RTE), such as sender-receiver, client-server, and communication RTE, and gain practical experience in planning events inside the RTE framework. The course also covers non-AutoSAR applications and goes beyond AutoSAR, concentrating on the Microcontroller Abstraction Layer (MCAL), ARXML configuration, and efficient project setup.  By the end of the course, you will have a variety of abilities in automotive software development and be well-equipped to handle challenging automotive software projects, whether inside or outside the AutoSAR framework.

This course is helpful for:

1) Engineers who work in creating automotive software, vehicle electronics, and systems engineering and wish to learn more about AUTOSAR and its use should take this course.

2) Software developers who want to embrace AUTOSAR-compliant development practices are responsible for developing software applications and components for automotive systems.

3) Engineers working on embedded systems in automobiles who want to include AUTOSAR principles into their work.

4) Systems Architects: Experts in the design and architecture of automotive systems interested in implementing AUTOSAR-compliant plans.

To be successful in this course, you should have a background in programming skills, software engineering, embedded systems, and the fundamentals of automotive technology.",https://www.coursera.org/learn/introduction-to-autosar
149,Introduction to Databases for Back-End Development,"Back-end developers write applications that end-users use to interact with databases. Some common tasks that end-users carry out using these applications include storing, searching, extracting and manipulating data. Therefore, it’s essential that all back-end developers possess strong knowledge and experience with how databases work.

In this course, you’ll receive an introduction to databases and explore the different ways in which they can be used to store and manage data. You’ll also learn to distinguish between different types of database management systems. You’ll then practice basic creation and data selection tasks with the use of Structured Query Language (SQL) commands.

By the end of this course, you’ll be able to:

- Demonstrate a working knowledge of the concepts and principles that underpin how databases work
- Identify and explain the different types of core technology and management systems used in
   databases
- Identify and interpret basic SQL statements and commands
- Manipulate records in a database with the use of SQL statements and commands
- Outline alternatives to SQL
- and plan and design a simple relational database system

You’ll also gain experience with the following:
- Fundamental concepts in database 
- Basic MySQL syntax and commands
- Database management systems
- Relational databases",https://www.coursera.org/learn/intro-to-databases-back-end-development
150,Hypothesis-Driven Development,"To deliver agile outcomes, you have to do more than implement agile processes- you have to create focus around what matters to your user and constantly test your ideas. This is easier said than done, but most of today’s high-functioning innovators have a strong culture of experimentation. In this course, you’ll learn how to identify the right questions at the right time, and pair them with the right methods to do just enough testing to make sure you minimize waste and maximize the outcomes you create with your user.

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.",https://www.coursera.org/learn/uva-darden-agile-testing
151,VLSI CAD Part I: Logic,"A modern VLSI chip has a zillion parts -- logic, control, memory, interconnect, etc.  How do we design these complex chips?  Answer: CAD software tools.  Learn how to build thesA modern VLSI chip is a remarkably complex beast:  billions of transistors, millions of logic gates deployed for computation and control, big blocks of memory, embedded blocks of pre-designed functions designed by third parties (called “intellectual property” or IP blocks).  How do people manage to design these complicated chips?  Answer: a sequence of computer aided design (CAD) tools takes an abstract description of the chip, and refines it step-wise to a final design. This class focuses on the major design tools used in the creation of an Application Specific Integrated Circuit (ASIC) or System on Chip (SoC) design. Our focus in this first part of the course is on key Boolean logic representations that make it possible to synthesize, and to verify, the gate-level logic in these designs.  This is the first step of the design chain, as we move from logic to layout.    Our goal is for students to understand how the tools themselves work, at the level of their fundamental algorithms and data structures. Topics covered will include: Computational Boolean algebra, logic verification, and logic synthesis (2-level and multi-level). Recommended Background
Programming experience (C, C++, Java, Python, etc.) and basic knowledge of data structures and algorithms (especially recursive algorithms).  An understanding of basic digital design:  Boolean algebra, Kmaps, gates and flip flops, finite state machine design.  Linear algebra and calculus at the level of a junior or senior in engineering.  Exposure to basic VLSI at an undergraduate level is nice -- but it’s not necessary.  We will keep the course self-contained, but students with some VLSI will be able to skip some background material.e tools in this class.",https://www.coursera.org/learn/vlsi-cad-logic
152,"Programming Foundations with JavaScript, HTML and CSS","Learn foundational programming concepts (e.g., functions, for loops, conditional statements) and how to solve problems like a programmer. In addition, learn basic web development as you build web pages using HTML, CSS, JavaScript. By the end of the course, will create a web page where others can upload their images and apply image filters that you create. After completing this course, you will be able to:
1. Think critically about how to solve a problem using programming;
2. Write JavaScript programs using functions, for loops, and conditional statements;
3. Use HTML to construct a web page with paragraphs, divs, images, links, and lists;
4. Add styles to a web page with CSS IDs and classes; and
5. Make a web page interactive with JavaScript commands like alert, onClick, onChange, adding input features like an image canvas, button, and slider.",https://www.coursera.org/learn/duke-programming-web
153,Create Machine Learning Models in Microsoft Azure,"Machine learning is the foundation for predictive modeling and artificial intelligence. If you want to learn about both the underlying concepts and how to get into building models with the most common machine learning tools this path is for you. In this course, you will learn the core principles of machine learning and how to use common tools and frameworks to train, evaluate, and use machine learning models. This course is designed to prepare you for roles that include planning and creating a suitable working environment for data science workloads on Azure. You will learn how to run data experiments and train predictive models. In addition, you will manage, optimize, and deploy machine learning models into production.

From the most basic classical machine learning models, to exploratory data analysis and customizing architectures, you’ll be guided by easy -to-digest conceptual content and interactive Jupyter notebooks.

If you already have some idea what machine learning is about or you have a strong mathematical background this course is perfect for you. These modules teach some machine learning concepts, but move fast so they can get to the power of using tools like scikit-learn, TensorFlow, and PyTorch. This learning path is also the best one for you if you're looking for just enough familiarity to understand machine learning examples for products like Azure ML or Azure Databricks. It's also a good place to start if you plan to move beyond classic machine learning and get an education in deep learning and neural networks, which we only introduce here.

This program consists of 5 courses to help prepare you to take the Exam DP-100: Designing and Implementing a Data Science Solution on Azure. The certification exam is an opportunity to prove knowledge and expertise operate machine learning solutions at cloud scale using Azure Machine Learning. This specialization teaches you to leverage your existing knowledge of Python and machine learning to manage data ingestion and preparation, model training and deployment, and machine learning solution monitoring in Microsoft Azure . Each course teaches you the concepts and skills that are measured by the exam.",https://www.coursera.org/learn/create-machine-learning-models-in-microsoft-azure
154,Blockchain Basics,"This first course of the Blockchain specialization provides a broad overview of the essential concepts of blockchain technology – by initially exploring the Bitcoin protocol followed by the Ethereum protocol – to lay the foundation necessary for developing applications and programming. You will be equipped with the knowledge needed to create nodes on your personal Ethereum blockchain, create accounts, unlock accounts, mine, transact, transfer Ethers, and check balances.        You will learn about the decentralized peer-to-peer network, an immutable distributed ledger and the trust model that defines a blockchain. This course enables you to explain basic components of a blockchain (transaction, block, block header, and the chain) its operations (verification, validation, and consensus model) underlying algorithms, and essentials of trust (hard fork and soft fork). Content includes the hashing and cryptography foundations indispensable to blockchain programming, which is the focus of two subsequent specialization courses, Smart Contracts and Decentralized Applications (Dapps). You will work on a virtual machine image, specifically created for this course, to build an Ethereum test chain and operate on the chain. This hands-on activity will help you understand the workings of a blockchain, its transactions, blocks and mining.

Main concepts are delivered through videos, demos and hands-on exercises.",https://www.coursera.org/learn/blockchain-basics
155,COBOL Programming with VSCode,"Professor Tak Auyeung of American River College, said it beautifully, “A programming language is not a fashion statement” it is used for a purpose. Whether it is to add new features, modify logic, create APIs to integrate it into other applications, or implement modern development practices, businesses around the world need application developers who know COBOL. This introductory COBOL course helps a novice learn the Structure of COBOL programs, Data types & Variable Handling, Intrinsic Functions, Branching logic and more. The goal of the course is to enable the participant to be able to write basic COBOL programs. This is a fantastic compliment to the IBM z/OS Practitioner path for the IBM Mainframe.

Join the COBOL Fridays web series. These webinars are curated for first-time programmers, lifelong learners, and anyone who's interested in learning COBOL. http://ibm.biz/cfcoursera

On successful completion of this course, learners are eligible to earn their COBOL Programming with VSCode badge.",https://www.coursera.org/learn/cobol-programming-vscode
156,Product Management: Foundations & Stakeholder Collaboration,"Product managers play a crucial role in driving the development and success of a product, serving as a critical link between customers, stakeholders, and the development team. They are responsible for understanding market requirements, defining product objectives and features, and overseeing the entire product lifecycle from conception to its release.

This course will provide you with valuable skills in fostering productive collaborations, engaging stakeholders effectively, and enhancing communication abilities.

You will learn about Kotler's Five Levels of product and market segmentation. In addition, you’ll explore the product manager's role in business development, SWOT analysis, and Porter's Five Forces Model for market assessment.

The course also helps you understand the concepts of innovation and ideation and equip you with crucial skills for effective communication and teamwork in the field of Product Management.

Throughout this course, several product management experts will share their insights and experiences in product management. Practice quizzes and graded quizzes will test your knowledge. You will be able to apply the concepts learned in the course in a final project.

This course is suitable for anyone who aspires to apply for product management jobs. It requires no prior experience or knowledge of product management.",https://www.coursera.org/learn/product-management-foundations-and-stakeholder-collaboration
157,Software Processes and Agile Practices,"This course delves into a variety of processes to structure software development. It also covers the foundations of core Agile practices, such as Extreme Programming and Scrum.",https://www.coursera.org/learn/software-processes-and-agile-practices
158,Introduction to iOS Mobile Application Development,"Learn about iOS development by learning about the OS and the development platform. Discover how to set up and prepare a local environment. Get acquainted with the Swift playground and write code in Swift.  By the end of this course, you’ll be able to: 
 
-Demonstrate a working knowledge of the general principles of mobile apps and the iOS ecosystem 
-Set up and explore the XCode environment  
-Demonstrate an understanding of how XCode is used in the Swift app development process 
-Write Swift code and create UI with the use of Swift playgrounds 
-Navigate the Swift UI 
-Manipulate data in Swift 
 
You’ll gain experience with the following tools and software: 
 
-Swift application and software 
-iOS software and development environment 
-Mobile OS 
-XCode 
-Objective-C 
-UI frameworks 
-Testflight 
-UI storyboard 
-MVC 
-APIs",https://www.coursera.org/learn/introduction-to-ios-mobile-application-development
159,React Native,"React Native is an open-source framework for building cross-platform applications (apps) using React and the platform’s native capabilities. In this course, you will move from the basics of React to a more advanced implementation using React Native. You’ll review a wide range of different React components and ways of styling them. And you’ll get to practice using different mobile methods of interactivity with React Native. Some of the basics skills you will learn include:
• Building a single-page React Native app and styling it using basic components
• Building large lists and configuring user inputs within a React Native app
• Using the Pressable component to build buttons and other clickable areas
• Setting up an app with React Navigation and moving between screens

You’ll gain experience with the following tools and software: 
• React
• React Native
• Front End development languages (HTML, CSS and JavaScript)
• JSX
• Code editing programs, such as Expo and Visual Studio Code

This course is for learners who would like to prepare themselves for a career in mobile development. To succeed in this course, you will need foundational knowledge of React basics, internet navigation skills and an eagerness to code.",https://www.coursera.org/learn/react-native-course
160,Designing User Interfaces and Experiences (UI/UX),"UI and UX design is a thriving industry with numerous prospects for anyone with the right skills. This course is designed for those who are interested in starting a career in designing UI and UX experiences as well as developers who want to create web and front-end applications. It emphasizes the key concepts, tools, and methodologies used in front-end development.   Web and mobile-accessible devices are transforming the world. Nowadays, everyone has a smartphone, tablet, smart TV, and/or laptop, which they use for communication and data searching. Companies are increasingly turning to front-end developers, mobile app developers, and UI/UX designers to assist them in producing user-friendly products. Therefore, it is crucial to provide users with a robust yet intuitive user interface and experience. 

In this course, you will learn about the best practices of visual design development and identify the differences between well-designed and poor user interfaces. You will explore typography, readability, and colour theory in UI design.  

You will gain insight into key methodologies in visual design like Responsive Web Design (RWD) and Progressive Web Design (PWD). 

You will gain exposure to tools like Figma, a collaborative cloud-based app used for interface design. You will discover the steps to set up a Figma account and learn about its configuration. In addition, you will explore the various components, styles, libraries, and layout grids used in Figma that are essential for design. 

Throughout this course, you will learn through videos, readings, activities, and quizzes designed to teach you the fundamentals of visual web and mobile design and development. You will gain a range of technical and practical knowledge and get insights and guidance from experts in the field. 
 
The practical knowledge you will gain from the hands-on labs will further strengthen your base and enable you to perform better. 

This is a beginner’s course, intended for learners with basic computer operating skills who have a fundamental knowledge of visual design development and are familiar with Figma.  

To be successful in this course, you should have a basic understanding of User Interface (UI) and User Experience (UX) design as well as website wireframes, familiarity with the different kinds of layouts and tools used for visual design in various devices, and familiarity with the Figma application.",https://www.coursera.org/learn/designing-user-interfaces-and-experiences-uiux
161,Scrum Master Certification: Scrum Methodologies,"This course is designed to help Scrum beginners learn the foundational knowledge to become proficient with Agile Scrum. Throughout the course, learners will explore User Stories and how they are prioritized in Agile, Velocity, Backlog Refinement, and Market Actions. Learners will also learn about different Scrum Reports and methods of managing risks.",https://www.coursera.org/learn/csm-practice-process-management
162,"Python Functions, Files, and Dictionaries","This course introduces the dictionary data structure and user-defined functions. You’ll learn about local and global variables, optional and keyword parameter-passing, named functions and lambda expressions. You’ll also learn about Python’s sorted function and how to control the order in which it sorts by passing in another function as an input. For your final project, you’ll read in simulated social media data from a file, compute sentiment scores, and write out .csv files. It covers chapters 10-16 of the textbook “Fundamentals of Python Programming,” which is the accompanying text (optional and free) for this course. The course is well-suited for you if you have already taken the ""Python Basics"" course and want to gain further fundamental knowledge of the Python language. Together, both courses are geared towards newcomers to Python programming, those who need a refresher on Python basics, or those who may have had some exposure to Python programming but want a more in-depth exposition and vocabulary for describing and reasoning about programs.

This is a follow-up to the ""Python Basics"" course (course 1 of the Python 3 Programming Specialization), and it is the second of five courses in the specialization.",https://www.coursera.org/learn/python-functions-files-dictionaries
163,Database Design and Basic SQL in PostgreSQL,"In this course you will learn more about the historical design of databases and the use of SQL in the PostgreSQL environment. Using SQL techniques and common commands (INSERT INTO, WHERE, ORDER BY, ON DELETE CASCADE, etc) will enable you to create tables, column types and define the schema of your data in PostgreSQL.    You will learn about data modeling and how to represent one-to-many and many-to-many relationships in PostgreSQL.   Students will do hands-on assignments creating tables, inserting data, designing data models, creating relational structures and inserting and querying relational data in tables.",https://www.coursera.org/learn/database-design-postgresql
164,Introduction to User Experience Principles and Processes,"This UX course provides an introduction to the fields of UX research and design. Learners will gain an understanding of what is involved in UX research, including conducting interviews, evaluating systems, and analyzing systems using principles of good design. Learners will also learn about the work involved in UX Design, including the generation of promising design solutions and the creation of prototypes at multiple levels of fidelity. By interleaving successive phases of UX Research and Design, learners will see how to learn from inevitable mistakes and improve towards a product with a great UX. What you'll learn:

- The skills needed for UX research and design 
- How UX researchers discover and assess user needs and assess possible designs 
- How to conduct a micro-usability test 
- How UX designers use sketching and prototyping to develop design concepts
- How to incorporate a user-centered focus into the design process 
- Key features of human behavior and describe their impact on the design of interactive systems 
- Techniques for critiquing and designing interactive systems based on human capabilities and behavior",https://www.coursera.org/learn/introtoux-principles-and-processes
165,Introduction to Java and Object-Oriented Programming,"This course provides an introduction to the Java language and object-oriented programming, including an overview of Java syntax and how it differs from a language like Python.  Students will learn how to write custom Java classes and methods, and how to test their code using unit testing and test-driven development.  Topics include basic data structures like Arrays and ArrayLists and overloading methods.",https://www.coursera.org/learn/java-object-oriented-programming
166,Getting Started with Front-End and Web Development,"Have you encountered a website with stunning design, user-friendly interactivity, and dynamic elements and wondered how it was put together? If so, this course is designed for you! It is tailored for aspiring front-end developers or those who want to get started in this field.  In this course, you will gain an understanding of front-end and web development, exploring the significance of User Interface (UI) and User Experience (UX) design. You will delve into the workings of web browsers and the internet, learning about the tools and technologies that enable you to create interactive and engaging websites and applications. Additionally, you'll explore No-Code development and be introduced to Content Management Systems (CMS). 

Throughout this course, we will provide step-by-step instructional guidance to help you engage in hands-on activities. You will also discover various job opportunities and potential career paths in the front-end development field and hear from industry professionals about their roles and experience as front-end developers. 

This course is designed for beginners in Front-end development and does not require prior programming or web development experience.",https://www.coursera.org/learn/getting-started-with-front-end-and-web-development
167,Managing an Agile Team,"While agile has become the de facto standard for managing digital innovation teams, many wonder if they’re doing it ‘right’. Twitter is full of jokes about how teams say they do agile but don’t ‘really’ do it. The reality is that getting the most out of agile is less about observing specific procedures and more about how a team focuses and measures their progress.  Rather than just boring you with an accounting of agile methodologies, this course focuses on helping you better charter your team’s focus, definition of success, and practice of agile. While learning about agile mainstays like Scrum, XP, and kanban, you’ll also learn to help your team ask the right questions about how they’re working and facilitate good answers on how agile can help.    

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.",https://www.coursera.org/learn/uva-darden-agile-team-management
168,Introduction to Augmented Reality and ARCore,"This class will teach you the fundamentals of augmented reality (AR), and how to build an AR experience using ARCore. Through the four week course, you'll learn: - How to identify different types of AR experiences 
- Tools and platforms used in the AR landscape 
- What makes AR feel ""real"" 
- Popular use cases for AR
- How to create an AR use flow 
- How AR experiences work
- Tools like Google Poly and Unity to build AR experiences 
- Next steps to start building an AR experience using ARCore and other tools  

This course will break down complex AR concepts to make them easy to understand, while also sharing expert tips and knowledge from Daydream's ARCore team. The course is great for beginners who are just getting started with AR or ARCore.",https://www.coursera.org/learn/ar
169,Full Stack Application Development Capstone Project,"Show your mastery of full stack application development by completing this capstone project! In this course, you will apply your knowledge and skills to a real-life inspired challenge and use your expertise to develop a successful solution.  The project provides you with an opportunity to solidify your full stack proficiency. As you design a dynamic user experience, you will develop frontend pages, add user administration, build actions for database operations, create backend services, and configure CI/CD pipelines. You will boost your capabilities with HTML, CSS, JavaScript, Django, React, Node js and NoSQL (Mongo), Containerization, IBM Code Engine, Python, and Kubernetes. Then you will devise a solution for managing the containerized deployment of your application. 

This project is created for you to apply knowledge of relevant and in-demand skills such as:  
- Designing applications and their architecture 
- Creating web frontends with static and dynamic pages using HTML, CSS, JavaScript and REACT
- Implementing user management and authentication  
- Developing backend services and communicating with databases 
- Continuously Integrating and Deploying changes using CI/CD pipelines  
- Deploying serverless applications on Code Engine 
- Creating and invoking RESTful microservices 
- Deploying the entire solution on Cloud using Kubernetes 

When you complete this project, you will have a working Full Stack application showpiece that will impress potential employers. 

Before completing this project, it is highly recommended that you complete all the prior courses offered in the IBM Full Stack Software Developer Professional Certificate.",https://www.coursera.org/learn/ibm-cloud-native-full-stack-development-capstone
170,Fundamentals of Java Programming,"Immerse yourself in the world of Java programming with this comprehensive course, consisting of three modules, has been designed for those who are completely new to Java programming and desire to develop a strong foundation in it. In the first module, Java Fundamentals, you'll be introduced to Java programming and its integral components such as the Java Virtual Machine (JVM), the Java Runtime Environment (JRE), and the Java class library. This module also provides an understanding of basic programming constructs and a hands-on experience with Java development tools.

Progressing to the second module, Core Java, you'll delve into the fundamental elements of the language. This segment emphasizes key concepts like Java Syntax, Variables, Methods, Operators, and Control Statements, supported by numerous practical assessments to refine your problem-solving skills.

Finally, in the third module, OOPS and other essential concepts, advanced aspects of Java programming are unfolded. Here, you'll learn about advanced Object-Oriented Programming (OOP) principles and critical exception handling techniques that enhance code reliability and robustness.

By the end of this course, you'll have a robust understanding of Java programming, with the ability to write efficient Java code and the readiness to delve into more advanced Java topics.",https://www.coursera.org/learn/fundamentals-of-java-programming
171,Mastering Laravel Framework and PHP,"This is a Beginner to Advance level of course, intended for learners passionate about Web Development.  Welcome to Module 1: Introduction to PHP and Laravel! This module serves as your gateway to the world of web development using the dynamic PHP language and the powerful Laravel framework. Whether you're new to programming or looking to expand your skills, this module will equip you with a strong foundation in both PHP and Laravel, setting the stage for your journey towards building modern web applications.

Welcome to Module 2: Building Web Applications with Laravel! This module is designed to provide you with a comprehensive understanding of creating dynamic and feature-rich web applications using the powerful Laravel framework. From the fundamental basics to advanced concepts, you'll embark on a journey to master the intricacies of routing, controllers, views, database interactions, and more. By the end of this module, you'll have a solid foundation in building web applications that not only adhere to best practices but also deliver exceptional user experiences.

Welcome to Module 3: Integrating PHP with Laravel! This module offers a comprehensive exploration of how PHP, the backbone of Laravel, seamlessly integrates with the framework to create dynamic and secure web applications. By combining the power of PHP's backend capabilities with Laravel's elegant structure, you'll learn to build feature-rich applications while ensuring the highest standards of security. Through practical video lessons, you'll uncover the art of leveraging PHP for backend logic, incorporating external PHP libraries, and implementing essential security measures within the Laravel ecosystem.

Welcome to Module 4: The Project Series module in our Laravel with PHP project! This module is designed to help you understand the intricacies of managing and organizing projects within your Laravel application. Whether you're building a task management system, project portfolio, or any other project-related functionality, this module will equip you with the skills and knowledge needed to create a robust and efficient project management system using Laravel.",https://www.coursera.org/learn/laravel-framework-and-php
172,Application Security for Developers and DevOps Professionals,"How vulnerable are your applications to security risks and threats? This course will help you identify vulnerabilities and monitor the health of your applications and systems. You’ll examine and implement secure code practices to prevent events like data breaches and leaks, and discover how practices like monitoring and observability can keep systems safe and secure.  You will gain extensive knowledge on various practices, concepts, and processes for maintaining a secure environment, including DevSecOps practices that automate security integration across the software development lifecycle (SDLC), Static Application Security Testing (SAST) for identifying security flaws, Dynamic Analysis, and Dynamic Testing. You’ll also learn about creating a Secure Development Environment, both on-premise and in the cloud. You’ll explore the Open Web Application Security Project (OWASP) top application security risks, including broken access controls and SQL injections.  

Additionally, you will learn how monitoring, observability, and evaluation ensure secure applications and systems. You’ll discover the essential components of a monitoring system and how application performance monitoring (APM) tools aid in measuring app performance and efficiency. You’ll analyze the Golden Signals of monitoring, explore visualization and logging tools, and learn about the different metrics and alerting systems that help you understand your applications and systems.  

Through videos, hands-on labs, peer discussion, and the practice and graded assessments in this course, you will develop and demonstrate your skills and knowledge for creating and maintaining a secure development environment.",https://www.coursera.org/learn/application-security-for-developers-devops
173,Database Management Essentials,"Database Management Essentials provides the foundation you need for a career in database development, data warehousing, or business intelligence, as well as for the entire Data Warehousing for Business Intelligence specialization. In this course, you will create relational databases, write SQL statements to extract information to satisfy business reporting requests, create entity relationship diagrams (ERDs) to design databases, and analyze table designs for excessive redundancy. As you develop these skills, you will use either Oracle, MySQL, or PostgreSQL to execute SQL statements and a database diagramming tool such as the ER Assistant or Visual Paradigm to create ERDs. We’ve designed this course to ensure a common foundation for specialization learners. Everyone taking the course can jump right in with writing SQL statements in Oracle, MySQL, or PostgreSQL.",https://www.coursera.org/learn/database-management
174,Applied ChatGPT for Cybersecurity,"There's a lot of talk about good and bad use of ChatGPT, but in this course we will dig into using ChatGPT to do some hands on introductory SOC analyst/incident response work, starting with basic packet analysis and moving to basic reverse engineering of a piece of malware. ChatGPT will be our guide as we do simple and intermediate level Wireshark packet analysis. We will reconstruct an entire attack and exfiltration campaign, then determine the exact commands used by the attacker. This work usually requires in-depth knowledge of SOC analyst and incident response tools, and of attack patterns in general, but we will see how having a subject matter expert create ChatGPT prompts to perform the investigation can make this a task something that even a novice SOC analyst would be able to complete. This will be a fun exercise, but remember to get your company's permission to do this in a environment or on a computer/virtual machine they approve of if using it at work. Since remnants of malware exist in the traffic, it could cause your antivirus or endpoint protection to alert.",https://www.coursera.org/learn/chatgpt-for-cybersecurity
175,Introduction to C# Programming and Unity,"This course is all about starting to learn how to develop video games using the C# programming language and the Unity game engine on Windows or Mac. Why use C# and Unity instead of some other language and game engine? Well, C# is a really good language for learning how to program and then programming professionally. Also, the Unity game engine is very popular with indie game developers; Unity games were downloaded 16,000,000,000 times in 2016! Finally, C# is one of the programming languages you can use in the Unity environment. This course doesn't assume you have any previous programming experience. Don't worry if you've never written code before; we'll start at the very beginning and work our way up to building small games by the end of the course. Throughout the course you'll learn core programming concepts that apply to lots of programming languages, including C#, and you'll also learn how to apply those concepts when you develop games.

Computer programming is really fun in general, and programming games is even better!

Caution: Beginning (assuming no prior programming knowledge) is not the same as easy (not hard to do). Learning to program IS hard to do, especially since this course is essentially the first half of a freshman-level college course. Meeting the course challenges while you master the material will be rewarding to you, but doing that will require hard work and maybe even a few expletives along the way.

Module 1: Write your first C# console application and Unity script 
Module 2: Learn how we store data in our programs
Module 3: Learn how we use classes and objects to implement our code
Module 4: Learn the basics of Unity 2D games and take ""Final Exam""

“Unity” is a trademark or registered trademark of Unity Technologies or its affiliates in the U.S. and elsewhere.

This course is an independent work and is not sponsored by, authorized by, or affiliated with Unity Technologies or its affiliates",https://www.coursera.org/learn/introduction-programming-unity
176,Getting Started with Go,"Learn the basics of Go, an open source programming language originally developed by a team at Google and enhanced by many contributors from the open source community. This course is designed for individuals with previous programming experience using such languages as C, Python, or Java, and covers the fundamental elements of Go. Topics include data types, protocols, formats, and writing code that incorporates RFCs and JSON. Most importantly, you’ll have a chance to practice writing Go programs and receive feedback from your peers. Upon completing this course, you'll be able to implement simple Go programs, which will prepare you for subsequent study at a more advanced level.",https://www.coursera.org/learn/golang-getting-started
